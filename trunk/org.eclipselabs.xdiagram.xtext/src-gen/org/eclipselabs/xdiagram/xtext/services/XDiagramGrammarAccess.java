/*
* generated by Xtext
*/
package org.eclipselabs.xdiagram.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XDiagramGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class XDiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XDiagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetamodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Assignment cImportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportsImportStatementParserRuleCall_2_0 = (RuleCall)cImportsAssignment_2.eContents().get(0);
		private final Keyword cDiagramKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModelClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cModelClassEClassCrossReference_4_0 = (CrossReference)cModelClassAssignment_4.eContents().get(0);
		private final RuleCall cModelClassEClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cModelClassEClassCrossReference_4_0.eContents().get(1);
		private final Assignment cStylesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStylesStyleParserRuleCall_5_0 = (RuleCall)cStylesAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cNodesAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cNodesNodeParserRuleCall_6_0_0 = (RuleCall)cNodesAssignment_6_0.eContents().get(0);
		private final Assignment cLinksAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cLinksLinkParserRuleCall_6_1_0 = (RuleCall)cLinksAssignment_6_1.eContents().get(0);
		
		//XDiagram:
		//	"metamodel" importURI=STRING imports+=ImportStatement "diagram" modelClass=[ecore::EClass|QualifiedName]
		//	styles+=Style* (nodes+=Node | links+=Link)*;
		public ParserRule getRule() { return rule; }

		//"metamodel" importURI=STRING imports+=ImportStatement "diagram" modelClass=[ecore::EClass|QualifiedName] styles+=Style*
		//(nodes+=Node | links+=Link)*
		public Group getGroup() { return cGroup; }

		//"metamodel"
		public Keyword getMetamodelKeyword_0() { return cMetamodelKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }

		//imports+=ImportStatement
		public Assignment getImportsAssignment_2() { return cImportsAssignment_2; }

		//ImportStatement
		public RuleCall getImportsImportStatementParserRuleCall_2_0() { return cImportsImportStatementParserRuleCall_2_0; }

		//"diagram"
		public Keyword getDiagramKeyword_3() { return cDiagramKeyword_3; }

		//modelClass=[ecore::EClass|QualifiedName]
		public Assignment getModelClassAssignment_4() { return cModelClassAssignment_4; }

		//[ecore::EClass|QualifiedName]
		public CrossReference getModelClassEClassCrossReference_4_0() { return cModelClassEClassCrossReference_4_0; }

		//QualifiedName
		public RuleCall getModelClassEClassQualifiedNameParserRuleCall_4_0_1() { return cModelClassEClassQualifiedNameParserRuleCall_4_0_1; }

		//styles+=Style*
		public Assignment getStylesAssignment_5() { return cStylesAssignment_5; }

		//Style
		public RuleCall getStylesStyleParserRuleCall_5_0() { return cStylesStyleParserRuleCall_5_0; }

		//(nodes+=Node | links+=Link)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//nodes+=Node
		public Assignment getNodesAssignment_6_0() { return cNodesAssignment_6_0; }

		//Node
		public RuleCall getNodesNodeParserRuleCall_6_0_0() { return cNodesNodeParserRuleCall_6_0_0; }

		//links+=Link
		public Assignment getLinksAssignment_6_1() { return cLinksAssignment_6_1; }

		//Link
		public RuleCall getLinksLinkParserRuleCall_6_1_0() { return cLinksLinkParserRuleCall_6_1_0; }
	}

	public class ImportStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImportStatementAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cImportKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_1_0 = (RuleCall)cImportedNamespaceAssignment_1_1.eContents().get(0);
		
		//// importedNamespace apparently cannot be on the root element
		//
		//ImportStatement:
		//	{ImportStatement} ("import" importedNamespace=QualifiedNameWithWildCard)?;
		public ParserRule getRule() { return rule; }

		//{ImportStatement} ("import" importedNamespace=QualifiedNameWithWildCard)?
		public Group getGroup() { return cGroup; }

		//{ImportStatement}
		public Action getImportStatementAction_0() { return cImportStatementAction_0; }

		//("import" importedNamespace=QualifiedNameWithWildCard)?
		public Group getGroup_1() { return cGroup_1; }

		//"import"
		public Keyword getImportKeyword_1_0() { return cImportKeyword_1_0; }

		//importedNamespace=QualifiedNameWithWildCard
		public Assignment getImportedNamespaceAssignment_1_1() { return cImportedNamespaceAssignment_1_1; }

		//QualifiedNameWithWildCard
		public RuleCall getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_1_0() { return cImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_1_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//QualifiedNameWithWildCard returns ecore::EString:
		//	QualifiedName ("." "*")?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ("." "*")?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//("." "*")?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//"*"
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}

	public class StyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Style");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStyleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFeaturesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFeaturesFigureFeaturesParserRuleCall_4_0 = (RuleCall)cFeaturesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Style:
		//	"style" ":" name=ID "{" features=FigureFeatures "}";
		public ParserRule getRule() { return rule; }

		//"style" ":" name=ID "{" features=FigureFeatures "}"
		public Group getGroup() { return cGroup; }

		//"style"
		public Keyword getStyleKeyword_0() { return cStyleKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//features=FigureFeatures
		public Assignment getFeaturesAssignment_4() { return cFeaturesAssignment_4; }

		//FigureFeatures
		public RuleCall getFeaturesFigureFeaturesParserRuleCall_4_0() { return cFeaturesFigureFeaturesParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DiagramElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DiagramElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLinkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// TODO: common: text / icon / tooltip
		//
		//DiagramElement:
		//	Node | Link;
		public ParserRule getRule() { return rule; }

		//Node | Link
		public Alternatives getAlternatives() { return cAlternatives; }

		//Node
		public RuleCall getNodeParserRuleCall_0() { return cNodeParserRuleCall_0; }

		//Link
		public RuleCall getLinkParserRuleCall_1() { return cLinkParserRuleCall_1; }
	}

	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cModelClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cModelClassEClassCrossReference_1_0 = (CrossReference)cModelClassAssignment_1.eContents().get(0);
		private final RuleCall cModelClassEClassQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cModelClassEClassCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResizableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cResizableResizableKeyword_3_0 = (Keyword)cResizableAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStyleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cStyleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cStyleIDTerminalRuleCall_4_1_0 = (RuleCall)cStyleAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIconKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIconAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIconIDTerminalRuleCall_5_1_0 = (RuleCall)cIconAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cNameAssignment_6_1.eContents().get(0);
		private final Assignment cAttributesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAttributesAttributeParserRuleCall_7_0 = (RuleCall)cAttributesAssignment_7.eContents().get(0);
		private final Assignment cFiguresAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cFiguresNodeFigureParserRuleCall_8_0 = (RuleCall)cFiguresAssignment_8.eContents().get(0);
		private final Assignment cContainersAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cContainersNodeContainerParserRuleCall_9_0 = (RuleCall)cContainersAssignment_9.eContents().get(0);
		private final Assignment cAnchorsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cAnchorsNodeAnchorParserRuleCall_10_0 = (RuleCall)cAnchorsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//// resizable default?
		//
		//// TODO validation: unique nodes
		//
		//// notation inheritance?
		//
		//Node:
		//	"node" modelClass=[ecore::EClass|QualifiedName] "{" resizable?="resizable"? ("style" style=ID)? ("icon" icon=ID)?
		//	("name" name=STRING)? attributes+=Attribute* figures+=NodeFigure* containers+=NodeContainer* anchors+=NodeAnchor* "}";
		public ParserRule getRule() { return rule; }

		//"node" modelClass=[ecore::EClass|QualifiedName] "{" resizable?="resizable"? ("style" style=ID)? ("icon" icon=ID)?
		//("name" name=STRING)? attributes+=Attribute* figures+=NodeFigure* containers+=NodeContainer* anchors+=NodeAnchor* "}"
		public Group getGroup() { return cGroup; }

		//"node"
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }

		//modelClass=[ecore::EClass|QualifiedName]
		public Assignment getModelClassAssignment_1() { return cModelClassAssignment_1; }

		//[ecore::EClass|QualifiedName]
		public CrossReference getModelClassEClassCrossReference_1_0() { return cModelClassEClassCrossReference_1_0; }

		//QualifiedName
		public RuleCall getModelClassEClassQualifiedNameParserRuleCall_1_0_1() { return cModelClassEClassQualifiedNameParserRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//resizable?="resizable"?
		public Assignment getResizableAssignment_3() { return cResizableAssignment_3; }

		//"resizable"
		public Keyword getResizableResizableKeyword_3_0() { return cResizableResizableKeyword_3_0; }

		//("style" style=ID)?
		public Group getGroup_4() { return cGroup_4; }

		//"style"
		public Keyword getStyleKeyword_4_0() { return cStyleKeyword_4_0; }

		//style=ID
		public Assignment getStyleAssignment_4_1() { return cStyleAssignment_4_1; }

		//ID
		public RuleCall getStyleIDTerminalRuleCall_4_1_0() { return cStyleIDTerminalRuleCall_4_1_0; }

		//("icon" icon=ID)?
		public Group getGroup_5() { return cGroup_5; }

		//"icon"
		public Keyword getIconKeyword_5_0() { return cIconKeyword_5_0; }

		//icon=ID
		public Assignment getIconAssignment_5_1() { return cIconAssignment_5_1; }

		//ID
		public RuleCall getIconIDTerminalRuleCall_5_1_0() { return cIconIDTerminalRuleCall_5_1_0; }

		//("name" name=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"name"
		public Keyword getNameKeyword_6_0() { return cNameKeyword_6_0; }

		//name=STRING
		public Assignment getNameAssignment_6_1() { return cNameAssignment_6_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_6_1_0() { return cNameSTRINGTerminalRuleCall_6_1_0; }

		//attributes+=Attribute*
		public Assignment getAttributesAssignment_7() { return cAttributesAssignment_7; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_0() { return cAttributesAttributeParserRuleCall_7_0; }

		//figures+=NodeFigure*
		public Assignment getFiguresAssignment_8() { return cFiguresAssignment_8; }

		//NodeFigure
		public RuleCall getFiguresNodeFigureParserRuleCall_8_0() { return cFiguresNodeFigureParserRuleCall_8_0; }

		//containers+=NodeContainer*
		public Assignment getContainersAssignment_9() { return cContainersAssignment_9; }

		//NodeContainer
		public RuleCall getContainersNodeContainerParserRuleCall_9_0() { return cContainersNodeContainerParserRuleCall_9_0; }

		//anchors+=NodeAnchor*
		public Assignment getAnchorsAssignment_10() { return cAnchorsAssignment_10; }

		//NodeAnchor
		public RuleCall getAnchorsNodeAnchorParserRuleCall_10_0() { return cAnchorsNodeAnchorParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyIDTerminalRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueAtributeValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//// TODO : EMF default value
		//
		//Attribute:
		//	"set" key=ID "=" value=AtributeValue;
		public ParserRule getRule() { return rule; }

		//"set" key=ID "=" value=AtributeValue
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//key=ID
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_1_0() { return cKeyIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=AtributeValue
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//AtributeValue
		public RuleCall getValueAtributeValueParserRuleCall_3_0() { return cValueAtributeValueParserRuleCall_3_0; }
	}

	public class NodeFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionMainKeyword_0_0 = (Keyword)cOptionAssignment_0.eContents().get(0);
		private final Keyword cFigureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFigureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFigureFigureShapeEnumRuleCall_3_0 = (RuleCall)cFigureAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cStyleKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cStyleAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cStyleIDTerminalRuleCall_4_3_0 = (RuleCall)cStyleAssignment_4_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFeaturesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFeaturesFigureFeaturesParserRuleCall_6_0 = (RuleCall)cFeaturesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//// main? só Figure?
		//
		//NodeFigure:
		//	option="main"? "figure" ":" figure=FigureShape ("," "style" ":" style=ID)? "{" features=FigureFeatures "}";
		public ParserRule getRule() { return rule; }

		//option="main"? "figure" ":" figure=FigureShape ("," "style" ":" style=ID)? "{" features=FigureFeatures "}"
		public Group getGroup() { return cGroup; }

		//option="main"?
		public Assignment getOptionAssignment_0() { return cOptionAssignment_0; }

		//"main"
		public Keyword getOptionMainKeyword_0_0() { return cOptionMainKeyword_0_0; }

		//"figure"
		public Keyword getFigureKeyword_1() { return cFigureKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//figure=FigureShape
		public Assignment getFigureAssignment_3() { return cFigureAssignment_3; }

		//FigureShape
		public RuleCall getFigureFigureShapeEnumRuleCall_3_0() { return cFigureFigureShapeEnumRuleCall_3_0; }

		//("," "style" ":" style=ID)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//"style"
		public Keyword getStyleKeyword_4_1() { return cStyleKeyword_4_1; }

		//":"
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }

		//style=ID
		public Assignment getStyleAssignment_4_3() { return cStyleAssignment_4_3; }

		//ID
		public RuleCall getStyleIDTerminalRuleCall_4_3_0() { return cStyleIDTerminalRuleCall_4_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//features=FigureFeatures
		public Assignment getFeaturesAssignment_6() { return cFeaturesAssignment_6; }

		//FigureFeatures
		public RuleCall getFeaturesFigureFeaturesParserRuleCall_6_0() { return cFeaturesFigureFeaturesParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class NodeContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeContainer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLayoutAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLayoutContainerLayoutEnumRuleCall_0_0 = (RuleCall)cLayoutAssignment_0.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cForKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cModelReferenceAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cModelReferenceEReferenceCrossReference_2_1_0 = (CrossReference)cModelReferenceAssignment_2_1.eContents().get(0);
		private final RuleCall cModelReferenceEReferenceQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cModelReferenceEReferenceCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Assignment cFormatAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cFormatAlternatives_3_2_0 = (Alternatives)cFormatAssignment_3_2.eContents().get(0);
		private final Keyword cFormatPercentSignKeyword_3_2_0_0 = (Keyword)cFormatAlternatives_3_2_0.eContents().get(0);
		private final Keyword cFormatPxKeyword_3_2_0_1 = (Keyword)cFormatAlternatives_3_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFiguresAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFiguresNodeFigureParserRuleCall_5_0 = (RuleCall)cFiguresAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// TODO hstack / vstack (enum?)
		//
		//// TODO validation
		//
		//NodeContainer:
		//	layout=ContainerLayout? "container" ("for" modelReference=[ecore::EReference|QualifiedName])? (":" value=INT
		//	format=("%" | "px"))? "{" figures+=NodeFigure+ "}";
		public ParserRule getRule() { return rule; }

		//layout=ContainerLayout? "container" ("for" modelReference=[ecore::EReference|QualifiedName])? (":" value=INT format=("%"
		//| "px"))? "{" figures+=NodeFigure+ "}"
		public Group getGroup() { return cGroup; }

		//layout=ContainerLayout?
		public Assignment getLayoutAssignment_0() { return cLayoutAssignment_0; }

		//ContainerLayout
		public RuleCall getLayoutContainerLayoutEnumRuleCall_0_0() { return cLayoutContainerLayoutEnumRuleCall_0_0; }

		//"container"
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }

		//("for" modelReference=[ecore::EReference|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }

		//"for"
		public Keyword getForKeyword_2_0() { return cForKeyword_2_0; }

		//modelReference=[ecore::EReference|QualifiedName]
		public Assignment getModelReferenceAssignment_2_1() { return cModelReferenceAssignment_2_1; }

		//[ecore::EReference|QualifiedName]
		public CrossReference getModelReferenceEReferenceCrossReference_2_1_0() { return cModelReferenceEReferenceCrossReference_2_1_0; }

		//QualifiedName
		public RuleCall getModelReferenceEReferenceQualifiedNameParserRuleCall_2_1_0_1() { return cModelReferenceEReferenceQualifiedNameParserRuleCall_2_1_0_1; }

		//(":" value=INT format=("%" | "px"))?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//value=INT
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_3_1_0() { return cValueINTTerminalRuleCall_3_1_0; }

		//format=("%" | "px")
		public Assignment getFormatAssignment_3_2() { return cFormatAssignment_3_2; }

		//"%" | "px"
		public Alternatives getFormatAlternatives_3_2_0() { return cFormatAlternatives_3_2_0; }

		//"%"
		public Keyword getFormatPercentSignKeyword_3_2_0_0() { return cFormatPercentSignKeyword_3_2_0_0; }

		//"px"
		public Keyword getFormatPxKeyword_3_2_0_1() { return cFormatPxKeyword_3_2_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//figures+=NodeFigure+
		public Assignment getFiguresAssignment_5() { return cFiguresAssignment_5; }

		//NodeFigure
		public RuleCall getFiguresNodeFigureParserRuleCall_5_0() { return cFiguresNodeFigureParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cModelReferenceAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cModelReferenceEReferenceCrossReference_1_0_0 = (CrossReference)cModelReferenceAssignment_1_0.eContents().get(0);
		private final RuleCall cModelReferenceEReferenceQualifiedNameParserRuleCall_1_0_0_1 = (RuleCall)cModelReferenceEReferenceCrossReference_1_0_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cComplexAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final Keyword cComplexObjectKeyword_1_1_0_0 = (Keyword)cComplexAssignment_1_1_0.eContents().get(0);
		private final Assignment cModelClassAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cModelClassEClassCrossReference_1_1_1_0 = (CrossReference)cModelClassAssignment_1_1_1.eContents().get(0);
		private final RuleCall cModelClassEClassQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cModelClassEClassCrossReference_1_1_1_0.eContents().get(1);
		private final Keyword cSourceKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cSourceReferenceAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final CrossReference cSourceReferenceEReferenceCrossReference_1_1_3_0 = (CrossReference)cSourceReferenceAssignment_1_1_3.eContents().get(0);
		private final RuleCall cSourceReferenceEReferenceQualifiedNameParserRuleCall_1_1_3_0_1 = (RuleCall)cSourceReferenceEReferenceCrossReference_1_1_3_0.eContents().get(1);
		private final Keyword cTargetKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		private final Assignment cTargetReferenceAssignment_1_1_5 = (Assignment)cGroup_1_1.eContents().get(5);
		private final CrossReference cTargetReferenceEReferenceCrossReference_1_1_5_0 = (CrossReference)cTargetReferenceAssignment_1_1_5.eContents().get(0);
		private final RuleCall cTargetReferenceEReferenceQualifiedNameParserRuleCall_1_1_5_0_1 = (RuleCall)cTargetReferenceEReferenceCrossReference_1_1_5_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManhattanAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cManhattanManhattanKeyword_3_0 = (Keyword)cManhattanAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStyleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cStyleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cStyleIDTerminalRuleCall_4_1_0 = (RuleCall)cStyleAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIconKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIconAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIconIDTerminalRuleCall_5_1_0 = (RuleCall)cIconAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cNameAssignment_6_1.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_7_0_0 = (RuleCall)cAttributesAssignment_7_0.eContents().get(0);
		private final Assignment cLinefeaturesAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cLinefeaturesLineFeatureParserRuleCall_7_1_0 = (RuleCall)cLinefeaturesAssignment_7_1.eContents().get(0);
		private final Assignment cColorfeaturesAssignment_7_2 = (Assignment)cAlternatives_7.eContents().get(2);
		private final RuleCall cColorfeaturesColorFeatureParserRuleCall_7_2_0 = (RuleCall)cColorfeaturesAssignment_7_2.eContents().get(0);
		private final Assignment cIntegerfeaturesAssignment_7_3 = (Assignment)cAlternatives_7.eContents().get(3);
		private final RuleCall cIntegerfeaturesIntegerFeatureParserRuleCall_7_3_0 = (RuleCall)cIntegerfeaturesAssignment_7_3.eContents().get(0);
		private final Assignment cDecoratorsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDecoratorsDecoratorParserRuleCall_8_0 = (RuleCall)cDecoratorsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//// TODO: validation - complex requires source e target, complex structure
		//
		//// TODO text / icon
		//
		//Link:
		//	"link" (modelReference=[ecore::EReference|QualifiedName] | complex?="object" modelClass=[ecore::EClass|QualifiedName]
		//	"source" sourceReference=[ecore::EReference|QualifiedName] "target" targetReference=[ecore::EReference|QualifiedName])
		//	"{" manhattan?="manhattan"? ("style" style=ID)? ("icon" icon=ID)? ("name" name=STRING)? (attributes+=Attribute |
		//	linefeatures+=LineFeature | colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature)* //defenido no modelo? [ecore::EReference]
		//
		//	decorators+=Decorator* //    	('origin' '{'			
		//
		//	//			(sourceStatic = StaticFigure)?
		//
		//	//			(sourceDynamic += DynamicFigure)*			
		//
		//	//		'}')?
		//
		//	//		
		//
		//	//		('destiny' '{'			
		//
		//	//			(targetStatic = StaticFigure)?
		//
		//	//			(targetDynamic += DynamicFigure)*			
		//
		//	//		'}')?
		//
		//	"}";
		public ParserRule getRule() { return rule; }

		//"link" (modelReference=[ecore::EReference|QualifiedName] | complex?="object" modelClass=[ecore::EClass|QualifiedName]
		//"source" sourceReference=[ecore::EReference|QualifiedName] "target" targetReference=[ecore::EReference|QualifiedName])
		//"{" manhattan?="manhattan"? ("style" style=ID)? ("icon" icon=ID)? ("name" name=STRING)? (attributes+=Attribute |
		//linefeatures+=LineFeature | colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature)* //defenido no modelo? [ecore::EReference]
		//
		//decorators+=Decorator* //    	('origin' '{'			
		//
		////			(sourceStatic = StaticFigure)?
		//
		////			(sourceDynamic += DynamicFigure)*			
		//
		////		'}')?
		//
		////		
		//
		////		('destiny' '{'			
		//
		////			(targetStatic = StaticFigure)?
		//
		////			(targetDynamic += DynamicFigure)*			
		//
		////		'}')?
		//
		//"}"
		public Group getGroup() { return cGroup; }

		//"link"
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }

		//modelReference=[ecore::EReference|QualifiedName] | complex?="object" modelClass=[ecore::EClass|QualifiedName] "source"
		//sourceReference=[ecore::EReference|QualifiedName] "target" targetReference=[ecore::EReference|QualifiedName]
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//modelReference=[ecore::EReference|QualifiedName]
		public Assignment getModelReferenceAssignment_1_0() { return cModelReferenceAssignment_1_0; }

		//[ecore::EReference|QualifiedName]
		public CrossReference getModelReferenceEReferenceCrossReference_1_0_0() { return cModelReferenceEReferenceCrossReference_1_0_0; }

		//QualifiedName
		public RuleCall getModelReferenceEReferenceQualifiedNameParserRuleCall_1_0_0_1() { return cModelReferenceEReferenceQualifiedNameParserRuleCall_1_0_0_1; }

		//complex?="object" modelClass=[ecore::EClass|QualifiedName] "source" sourceReference=[ecore::EReference|QualifiedName]
		//"target" targetReference=[ecore::EReference|QualifiedName]
		public Group getGroup_1_1() { return cGroup_1_1; }

		//complex?="object"
		public Assignment getComplexAssignment_1_1_0() { return cComplexAssignment_1_1_0; }

		//"object"
		public Keyword getComplexObjectKeyword_1_1_0_0() { return cComplexObjectKeyword_1_1_0_0; }

		//modelClass=[ecore::EClass|QualifiedName]
		public Assignment getModelClassAssignment_1_1_1() { return cModelClassAssignment_1_1_1; }

		//[ecore::EClass|QualifiedName]
		public CrossReference getModelClassEClassCrossReference_1_1_1_0() { return cModelClassEClassCrossReference_1_1_1_0; }

		//QualifiedName
		public RuleCall getModelClassEClassQualifiedNameParserRuleCall_1_1_1_0_1() { return cModelClassEClassQualifiedNameParserRuleCall_1_1_1_0_1; }

		//"source"
		public Keyword getSourceKeyword_1_1_2() { return cSourceKeyword_1_1_2; }

		//sourceReference=[ecore::EReference|QualifiedName]
		public Assignment getSourceReferenceAssignment_1_1_3() { return cSourceReferenceAssignment_1_1_3; }

		//[ecore::EReference|QualifiedName]
		public CrossReference getSourceReferenceEReferenceCrossReference_1_1_3_0() { return cSourceReferenceEReferenceCrossReference_1_1_3_0; }

		//QualifiedName
		public RuleCall getSourceReferenceEReferenceQualifiedNameParserRuleCall_1_1_3_0_1() { return cSourceReferenceEReferenceQualifiedNameParserRuleCall_1_1_3_0_1; }

		//"target"
		public Keyword getTargetKeyword_1_1_4() { return cTargetKeyword_1_1_4; }

		//targetReference=[ecore::EReference|QualifiedName]
		public Assignment getTargetReferenceAssignment_1_1_5() { return cTargetReferenceAssignment_1_1_5; }

		//[ecore::EReference|QualifiedName]
		public CrossReference getTargetReferenceEReferenceCrossReference_1_1_5_0() { return cTargetReferenceEReferenceCrossReference_1_1_5_0; }

		//QualifiedName
		public RuleCall getTargetReferenceEReferenceQualifiedNameParserRuleCall_1_1_5_0_1() { return cTargetReferenceEReferenceQualifiedNameParserRuleCall_1_1_5_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//manhattan?="manhattan"?
		public Assignment getManhattanAssignment_3() { return cManhattanAssignment_3; }

		//"manhattan"
		public Keyword getManhattanManhattanKeyword_3_0() { return cManhattanManhattanKeyword_3_0; }

		//("style" style=ID)?
		public Group getGroup_4() { return cGroup_4; }

		//"style"
		public Keyword getStyleKeyword_4_0() { return cStyleKeyword_4_0; }

		//style=ID
		public Assignment getStyleAssignment_4_1() { return cStyleAssignment_4_1; }

		//ID
		public RuleCall getStyleIDTerminalRuleCall_4_1_0() { return cStyleIDTerminalRuleCall_4_1_0; }

		//("icon" icon=ID)?
		public Group getGroup_5() { return cGroup_5; }

		//"icon"
		public Keyword getIconKeyword_5_0() { return cIconKeyword_5_0; }

		//icon=ID
		public Assignment getIconAssignment_5_1() { return cIconAssignment_5_1; }

		//ID
		public RuleCall getIconIDTerminalRuleCall_5_1_0() { return cIconIDTerminalRuleCall_5_1_0; }

		//("name" name=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"name"
		public Keyword getNameKeyword_6_0() { return cNameKeyword_6_0; }

		//name=STRING
		public Assignment getNameAssignment_6_1() { return cNameAssignment_6_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_6_1_0() { return cNameSTRINGTerminalRuleCall_6_1_0; }

		//(attributes+=Attribute | linefeatures+=LineFeature | colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_7_0() { return cAttributesAssignment_7_0; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_0_0() { return cAttributesAttributeParserRuleCall_7_0_0; }

		//linefeatures+=LineFeature
		public Assignment getLinefeaturesAssignment_7_1() { return cLinefeaturesAssignment_7_1; }

		//LineFeature
		public RuleCall getLinefeaturesLineFeatureParserRuleCall_7_1_0() { return cLinefeaturesLineFeatureParserRuleCall_7_1_0; }

		//colorfeatures+=ColorFeature
		public Assignment getColorfeaturesAssignment_7_2() { return cColorfeaturesAssignment_7_2; }

		//ColorFeature
		public RuleCall getColorfeaturesColorFeatureParserRuleCall_7_2_0() { return cColorfeaturesColorFeatureParserRuleCall_7_2_0; }

		//integerfeatures+=IntegerFeature
		public Assignment getIntegerfeaturesAssignment_7_3() { return cIntegerfeaturesAssignment_7_3; }

		//IntegerFeature
		public RuleCall getIntegerfeaturesIntegerFeatureParserRuleCall_7_3_0() { return cIntegerfeaturesIntegerFeatureParserRuleCall_7_3_0; }

		//decorators+=Decorator*
		public Assignment getDecoratorsAssignment_8() { return cDecoratorsAssignment_8; }

		//Decorator
		public RuleCall getDecoratorsDecoratorParserRuleCall_8_0() { return cDecoratorsDecoratorParserRuleCall_8_0; }

		////    	('origin' '{'			
		//
		////			(sourceStatic = StaticFigure)?
		//
		////			(sourceDynamic += DynamicFigure)*			
		//
		////		'}')?
		//
		////		
		//
		////		('destiny' '{'			
		//
		////			(targetStatic = StaticFigure)?
		//
		////			(targetDynamic += DynamicFigure)*			
		//
		////		'}')?
		//
		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class DecoratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Decorator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecoratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cAtKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cPosAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cPosINTTerminalRuleCall_1_0_1_0 = (RuleCall)cPosAssignment_1_0_1.eContents().get(0);
		private final Keyword cPercentSignKeyword_1_0_2 = (Keyword)cGroup_1_0.eContents().get(2);
		private final Assignment cSourceAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cSourceSourceKeyword_1_1_0 = (Keyword)cSourceAssignment_1_1.eContents().get(0);
		private final Assignment cTargetAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final Keyword cTargetTargetKeyword_1_2_0 = (Keyword)cTargetAssignment_1_2.eContents().get(0);
		private final Assignment cMiddleAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final Keyword cMiddleMiddleKeyword_1_3_0 = (Keyword)cMiddleAssignment_1_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPlacingStaticAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPlacingStaticStaticFigureParserRuleCall_3_0 = (RuleCall)cPlacingStaticAssignment_3.eContents().get(0);
		private final Assignment cPlacingDynamicAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPlacingDynamicDynamicFigureParserRuleCall_4_0 = (RuleCall)cPlacingDynamicAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// % opcional? ou considerar pixeis?
		//
		//// ter "constantes" para origem destino
		//
		//Decorator:
		//	"decorator" ("at" pos=INT "%" | source?="source" | target?="target" | middle?="middle") "{"
		//	placingStatic=StaticFigure? placingDynamic+=DynamicFigure* "}";
		public ParserRule getRule() { return rule; }

		//"decorator" ("at" pos=INT "%" | source?="source" | target?="target" | middle?="middle") "{" placingStatic=StaticFigure?
		//placingDynamic+=DynamicFigure* "}"
		public Group getGroup() { return cGroup; }

		//"decorator"
		public Keyword getDecoratorKeyword_0() { return cDecoratorKeyword_0; }

		//"at" pos=INT "%" | source?="source" | target?="target" | middle?="middle"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"at" pos=INT "%"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"at"
		public Keyword getAtKeyword_1_0_0() { return cAtKeyword_1_0_0; }

		//pos=INT
		public Assignment getPosAssignment_1_0_1() { return cPosAssignment_1_0_1; }

		//INT
		public RuleCall getPosINTTerminalRuleCall_1_0_1_0() { return cPosINTTerminalRuleCall_1_0_1_0; }

		//"%"
		public Keyword getPercentSignKeyword_1_0_2() { return cPercentSignKeyword_1_0_2; }

		//source?="source"
		public Assignment getSourceAssignment_1_1() { return cSourceAssignment_1_1; }

		//"source"
		public Keyword getSourceSourceKeyword_1_1_0() { return cSourceSourceKeyword_1_1_0; }

		//target?="target"
		public Assignment getTargetAssignment_1_2() { return cTargetAssignment_1_2; }

		//"target"
		public Keyword getTargetTargetKeyword_1_2_0() { return cTargetTargetKeyword_1_2_0; }

		//middle?="middle"
		public Assignment getMiddleAssignment_1_3() { return cMiddleAssignment_1_3; }

		//"middle"
		public Keyword getMiddleMiddleKeyword_1_3_0() { return cMiddleMiddleKeyword_1_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//placingStatic=StaticFigure?
		public Assignment getPlacingStaticAssignment_3() { return cPlacingStaticAssignment_3; }

		//StaticFigure
		public RuleCall getPlacingStaticStaticFigureParserRuleCall_3_0() { return cPlacingStaticStaticFigureParserRuleCall_3_0; }

		//placingDynamic+=DynamicFigure*
		public Assignment getPlacingDynamicAssignment_4() { return cPlacingDynamicAssignment_4; }

		//DynamicFigure
		public RuleCall getPlacingDynamicDynamicFigureParserRuleCall_4_0() { return cPlacingDynamicDynamicFigureParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DynamicFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DynamicFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFigureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFigureDynamicElementParserRuleCall_1_0 = (RuleCall)cFigureAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFigureFeaturesParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// este text é diferente do figure: Label .... é confuso para quem está a aprender a linguagem   
		//
		//DynamicFigure:
		//	"text" figure=DynamicElement "{" features=FigureFeatures "}";
		public ParserRule getRule() { return rule; }

		//"text" figure=DynamicElement "{" features=FigureFeatures "}"
		public Group getGroup() { return cGroup; }

		//"text"
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }

		//figure=DynamicElement
		public Assignment getFigureAssignment_1() { return cFigureAssignment_1; }

		//DynamicElement
		public RuleCall getFigureDynamicElementParserRuleCall_1_0() { return cFigureDynamicElementParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features=FigureFeatures
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//FigureFeatures
		public RuleCall getFeaturesFigureFeaturesParserRuleCall_3_0() { return cFeaturesFigureFeaturesParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class DynamicElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DynamicElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLabelKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDescriptionKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//DynamicElement:
		//	"Label" | "Description";
		public ParserRule getRule() { return rule; }

		//"Label" | "Description"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"Label"
		public Keyword getLabelKeyword_0() { return cLabelKeyword_0; }

		//"Description"
		public Keyword getDescriptionKeyword_1() { return cDescriptionKeyword_1; }
	}

	public class StaticFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StaticFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFigureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFigureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFigureStaticElementParserRuleCall_2_0 = (RuleCall)cFigureAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cStyleKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cColonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cStyleAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cStyleIDTerminalRuleCall_3_3_0 = (RuleCall)cStyleAssignment_3_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesFigureFeaturesParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//StaticFigure:
		//	"figure" ":" figure=StaticElement ("," "style" ":" style=ID)? "{" features=FigureFeatures "}";
		public ParserRule getRule() { return rule; }

		//"figure" ":" figure=StaticElement ("," "style" ":" style=ID)? "{" features=FigureFeatures "}"
		public Group getGroup() { return cGroup; }

		//"figure"
		public Keyword getFigureKeyword_0() { return cFigureKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//figure=StaticElement
		public Assignment getFigureAssignment_2() { return cFigureAssignment_2; }

		//StaticElement
		public RuleCall getFigureStaticElementParserRuleCall_2_0() { return cFigureStaticElementParserRuleCall_2_0; }

		//("," "style" ":" style=ID)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//"style"
		public Keyword getStyleKeyword_3_1() { return cStyleKeyword_3_1; }

		//":"
		public Keyword getColonKeyword_3_2() { return cColonKeyword_3_2; }

		//style=ID
		public Assignment getStyleAssignment_3_3() { return cStyleAssignment_3_3; }

		//ID
		public RuleCall getStyleIDTerminalRuleCall_3_3_0() { return cStyleIDTerminalRuleCall_3_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//features=FigureFeatures
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }

		//FigureFeatures
		public RuleCall getFeaturesFigureFeaturesParserRuleCall_5_0() { return cFeaturesFigureFeaturesParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class StaticElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StaticElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cArrowKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTriangleKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cRhombusKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPolygonKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cPolylineKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//// TODO enum - porque é que esta não é uma figura como as outras?
		//
		//StaticElement:
		//	"Arrow" | "Triangle" | "Rhombus" | "Polygon" | "Polyline";
		public ParserRule getRule() { return rule; }

		//"Arrow" | "Triangle" | "Rhombus" | "Polygon" | "Polyline"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"Arrow"
		public Keyword getArrowKeyword_0() { return cArrowKeyword_0; }

		//"Triangle"
		public Keyword getTriangleKeyword_1() { return cTriangleKeyword_1; }

		//"Rhombus"
		public Keyword getRhombusKeyword_2() { return cRhombusKeyword_2; }

		//"Polygon"
		public Keyword getPolygonKeyword_3() { return cPolygonKeyword_3; }

		//"Polyline"
		public Keyword getPolylineKeyword_4() { return cPolylineKeyword_4; }
	}

	public class NodeAnchorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeAnchor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnchorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cToKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cObjectAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cObjectIDTerminalRuleCall_1_1_0 = (RuleCall)cObjectAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPassXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cPassXHyphenMinusKeyword_3_0 = (Keyword)cPassXAssignment_3.eContents().get(0);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXINTTerminalRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final Assignment cFormatXAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cFormatXAlternatives_5_0 = (Alternatives)cFormatXAssignment_5.eContents().get(0);
		private final Keyword cFormatXPercentSignKeyword_5_0_0 = (Keyword)cFormatXAlternatives_5_0.eContents().get(0);
		private final Keyword cFormatXLfKeyword_5_0_1 = (Keyword)cFormatXAlternatives_5_0.eContents().get(1);
		private final Keyword cFormatXRgKeyword_5_0_2 = (Keyword)cFormatXAlternatives_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPassYAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cPassYHyphenMinusKeyword_7_0 = (Keyword)cPassYAssignment_7.eContents().get(0);
		private final Assignment cYAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cYINTTerminalRuleCall_8_0 = (RuleCall)cYAssignment_8.eContents().get(0);
		private final Assignment cFormatYAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Alternatives cFormatYAlternatives_9_0 = (Alternatives)cFormatYAssignment_9.eContents().get(0);
		private final Keyword cFormatYPercentSignKeyword_9_0_0 = (Keyword)cFormatYAlternatives_9_0.eContents().get(0);
		private final Keyword cFormatYUpKeyword_9_0_1 = (Keyword)cFormatYAlternatives_9_0.eContents().get(1);
		private final Keyword cFormatYDwKeyword_9_0_2 = (Keyword)cFormatYAlternatives_9_0.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cFiguresAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cFiguresNodeFigureParserRuleCall_11_0 = (RuleCall)cFiguresAssignment_11.eContents().get(0);
		private final Assignment cArrowsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cArrowsArrowAnchorParserRuleCall_12_0 = (RuleCall)cArrowsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//// TODO: model ids / name Anchor
		//
		//NodeAnchor:
		//	"anchor" ("to" object=ID)? ":" passX="-"? X=INT formatX=("%" | "lf" | "rg") "," passY="-"? Y=INT formatY=("%" | "up" |
		//	"dw") "{" figures+=NodeFigure* arrows+=ArrowAnchor* "}";
		public ParserRule getRule() { return rule; }

		//"anchor" ("to" object=ID)? ":" passX="-"? X=INT formatX=("%" | "lf" | "rg") "," passY="-"? Y=INT formatY=("%" | "up" |
		//"dw") "{" figures+=NodeFigure* arrows+=ArrowAnchor* "}"
		public Group getGroup() { return cGroup; }

		//"anchor"
		public Keyword getAnchorKeyword_0() { return cAnchorKeyword_0; }

		//("to" object=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//"to"
		public Keyword getToKeyword_1_0() { return cToKeyword_1_0; }

		//object=ID
		public Assignment getObjectAssignment_1_1() { return cObjectAssignment_1_1; }

		//ID
		public RuleCall getObjectIDTerminalRuleCall_1_1_0() { return cObjectIDTerminalRuleCall_1_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//passX="-"?
		public Assignment getPassXAssignment_3() { return cPassXAssignment_3; }

		//"-"
		public Keyword getPassXHyphenMinusKeyword_3_0() { return cPassXHyphenMinusKeyword_3_0; }

		//X=INT
		public Assignment getXAssignment_4() { return cXAssignment_4; }

		//INT
		public RuleCall getXINTTerminalRuleCall_4_0() { return cXINTTerminalRuleCall_4_0; }

		//formatX=("%" | "lf" | "rg")
		public Assignment getFormatXAssignment_5() { return cFormatXAssignment_5; }

		//"%" | "lf" | "rg"
		public Alternatives getFormatXAlternatives_5_0() { return cFormatXAlternatives_5_0; }

		//"%"
		public Keyword getFormatXPercentSignKeyword_5_0_0() { return cFormatXPercentSignKeyword_5_0_0; }

		//"lf"
		public Keyword getFormatXLfKeyword_5_0_1() { return cFormatXLfKeyword_5_0_1; }

		//"rg"
		public Keyword getFormatXRgKeyword_5_0_2() { return cFormatXRgKeyword_5_0_2; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//passY="-"?
		public Assignment getPassYAssignment_7() { return cPassYAssignment_7; }

		//"-"
		public Keyword getPassYHyphenMinusKeyword_7_0() { return cPassYHyphenMinusKeyword_7_0; }

		//Y=INT
		public Assignment getYAssignment_8() { return cYAssignment_8; }

		//INT
		public RuleCall getYINTTerminalRuleCall_8_0() { return cYINTTerminalRuleCall_8_0; }

		//formatY=("%" | "up" | "dw")
		public Assignment getFormatYAssignment_9() { return cFormatYAssignment_9; }

		//"%" | "up" | "dw"
		public Alternatives getFormatYAlternatives_9_0() { return cFormatYAlternatives_9_0; }

		//"%"
		public Keyword getFormatYPercentSignKeyword_9_0_0() { return cFormatYPercentSignKeyword_9_0_0; }

		//"up"
		public Keyword getFormatYUpKeyword_9_0_1() { return cFormatYUpKeyword_9_0_1; }

		//"dw"
		public Keyword getFormatYDwKeyword_9_0_2() { return cFormatYDwKeyword_9_0_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }

		//figures+=NodeFigure*
		public Assignment getFiguresAssignment_11() { return cFiguresAssignment_11; }

		//NodeFigure
		public RuleCall getFiguresNodeFigureParserRuleCall_11_0() { return cFiguresNodeFigureParserRuleCall_11_0; }

		//arrows+=ArrowAnchor*
		public Assignment getArrowsAssignment_12() { return cArrowsAssignment_12; }

		//ArrowAnchor
		public RuleCall getArrowsArrowAnchorParserRuleCall_12_0() { return cArrowsArrowAnchorParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class ArrowAnchorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArrowAnchor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceIDTerminalRuleCall_1_0 = (RuleCall)cReferenceAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeIncomingKeyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeOutgoingKeyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		private final Keyword cTypeBothKeyword_3_0_2 = (Keyword)cTypeAlternatives_3_0.eContents().get(2);
		private final Keyword cConnectionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUsingKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNINTTerminalRuleCall_5_1_0 = (RuleCall)cNAssignment_5_1.eContents().get(0);
		private final Keyword cConnectionsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//// TODO: model ids - change syntax / name AnchorConstraint -- N connections?
		//
		//ArrowAnchor:
		//	"set" reference=ID "as" type=("incoming" | "outgoing" | "both") "connection" ("using" N=INT "connections")?;
		public ParserRule getRule() { return rule; }

		//"set" reference=ID "as" type=("incoming" | "outgoing" | "both") "connection" ("using" N=INT "connections")?
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//reference=ID
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//ID
		public RuleCall getReferenceIDTerminalRuleCall_1_0() { return cReferenceIDTerminalRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//type=("incoming" | "outgoing" | "both")
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"incoming" | "outgoing" | "both"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"incoming"
		public Keyword getTypeIncomingKeyword_3_0_0() { return cTypeIncomingKeyword_3_0_0; }

		//"outgoing"
		public Keyword getTypeOutgoingKeyword_3_0_1() { return cTypeOutgoingKeyword_3_0_1; }

		//"both"
		public Keyword getTypeBothKeyword_3_0_2() { return cTypeBothKeyword_3_0_2; }

		//"connection"
		public Keyword getConnectionKeyword_4() { return cConnectionKeyword_4; }

		//("using" N=INT "connections")?
		public Group getGroup_5() { return cGroup_5; }

		//"using"
		public Keyword getUsingKeyword_5_0() { return cUsingKeyword_5_0; }

		//N=INT
		public Assignment getNAssignment_5_1() { return cNAssignment_5_1; }

		//INT
		public RuleCall getNINTTerminalRuleCall_5_1_0() { return cNINTTerminalRuleCall_5_1_0; }

		//"connections"
		public Keyword getConnectionsKeyword_5_2() { return cConnectionsKeyword_5_2; }
	}

	public class FigureFeaturesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FigureFeatures");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFigureFeaturesAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cLinefeaturesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cLinefeaturesLineFeatureParserRuleCall_1_0_0 = (RuleCall)cLinefeaturesAssignment_1_0.eContents().get(0);
		private final Assignment cCenterfeaturesAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cCenterfeaturesCenterFeatureParserRuleCall_1_1_0 = (RuleCall)cCenterfeaturesAssignment_1_1.eContents().get(0);
		private final Assignment cAlignfeaturesAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cAlignfeaturesAlignFeatureParserRuleCall_1_2_0 = (RuleCall)cAlignfeaturesAssignment_1_2.eContents().get(0);
		private final Assignment cGradientfeaturesAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final RuleCall cGradientfeaturesGradientFeatureParserRuleCall_1_3_0 = (RuleCall)cGradientfeaturesAssignment_1_3.eContents().get(0);
		private final Assignment cPointfeaturesAssignment_1_4 = (Assignment)cAlternatives_1.eContents().get(4);
		private final RuleCall cPointfeaturesPointFeatureParserRuleCall_1_4_0 = (RuleCall)cPointfeaturesAssignment_1_4.eContents().get(0);
		private final Assignment cSizefeaturesAssignment_1_5 = (Assignment)cAlternatives_1.eContents().get(5);
		private final RuleCall cSizefeaturesSizeFeatureParserRuleCall_1_5_0 = (RuleCall)cSizefeaturesAssignment_1_5.eContents().get(0);
		private final Assignment cPositionfeaturesAssignment_1_6 = (Assignment)cAlternatives_1.eContents().get(6);
		private final RuleCall cPositionfeaturesPositionFeatureParserRuleCall_1_6_0 = (RuleCall)cPositionfeaturesAssignment_1_6.eContents().get(0);
		private final Assignment cColorfeaturesAssignment_1_7 = (Assignment)cAlternatives_1.eContents().get(7);
		private final RuleCall cColorfeaturesColorFeatureParserRuleCall_1_7_0 = (RuleCall)cColorfeaturesAssignment_1_7.eContents().get(0);
		private final Assignment cIntegerfeaturesAssignment_1_8 = (Assignment)cAlternatives_1.eContents().get(8);
		private final RuleCall cIntegerfeaturesIntegerFeatureParserRuleCall_1_8_0 = (RuleCall)cIntegerfeaturesAssignment_1_8.eContents().get(0);
		private final Assignment cBooleanfeaturesAssignment_1_9 = (Assignment)cAlternatives_1.eContents().get(9);
		private final RuleCall cBooleanfeaturesBooleanFeatureParserRuleCall_1_9_0 = (RuleCall)cBooleanfeaturesAssignment_1_9.eContents().get(0);
		private final Assignment cStringfeaturesAssignment_1_10 = (Assignment)cAlternatives_1.eContents().get(10);
		private final RuleCall cStringfeaturesStringFeatureParserRuleCall_1_10_0 = (RuleCall)cStringfeaturesAssignment_1_10.eContents().get(0);
		
		//FigureFeatures:
		//	{FigureFeatures} (linefeatures+=LineFeature //	        	(customfeatures += CustomFeature)
		//
		//	| centerfeatures+=CenterFeature | alignfeatures+=AlignFeature | gradientfeatures+=GradientFeature |
		//	pointfeatures+=PointFeature | sizefeatures+=SizeFeature | positionfeatures+=PositionFeature |
		//	colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature | booleanfeatures+=BooleanFeature |
		//	stringfeatures+=StringFeature)*;
		public ParserRule getRule() { return rule; }

		//{FigureFeatures} (linefeatures+=LineFeature //	        	(customfeatures += CustomFeature)
		//
		//| centerfeatures+=CenterFeature | alignfeatures+=AlignFeature | gradientfeatures+=GradientFeature |
		//pointfeatures+=PointFeature | sizefeatures+=SizeFeature | positionfeatures+=PositionFeature |
		//colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature | booleanfeatures+=BooleanFeature |
		//stringfeatures+=StringFeature)*
		public Group getGroup() { return cGroup; }

		//{FigureFeatures}
		public Action getFigureFeaturesAction_0() { return cFigureFeaturesAction_0; }

		//(linefeatures+=LineFeature //	        	(customfeatures += CustomFeature)
		//
		//| centerfeatures+=CenterFeature | alignfeatures+=AlignFeature | gradientfeatures+=GradientFeature |
		//pointfeatures+=PointFeature | sizefeatures+=SizeFeature | positionfeatures+=PositionFeature |
		//colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature | booleanfeatures+=BooleanFeature |
		//stringfeatures+=StringFeature)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//linefeatures+=LineFeature
		public Assignment getLinefeaturesAssignment_1_0() { return cLinefeaturesAssignment_1_0; }

		//LineFeature
		public RuleCall getLinefeaturesLineFeatureParserRuleCall_1_0_0() { return cLinefeaturesLineFeatureParserRuleCall_1_0_0; }

		//centerfeatures+=CenterFeature
		public Assignment getCenterfeaturesAssignment_1_1() { return cCenterfeaturesAssignment_1_1; }

		//CenterFeature
		public RuleCall getCenterfeaturesCenterFeatureParserRuleCall_1_1_0() { return cCenterfeaturesCenterFeatureParserRuleCall_1_1_0; }

		//alignfeatures+=AlignFeature
		public Assignment getAlignfeaturesAssignment_1_2() { return cAlignfeaturesAssignment_1_2; }

		//AlignFeature
		public RuleCall getAlignfeaturesAlignFeatureParserRuleCall_1_2_0() { return cAlignfeaturesAlignFeatureParserRuleCall_1_2_0; }

		//gradientfeatures+=GradientFeature
		public Assignment getGradientfeaturesAssignment_1_3() { return cGradientfeaturesAssignment_1_3; }

		//GradientFeature
		public RuleCall getGradientfeaturesGradientFeatureParserRuleCall_1_3_0() { return cGradientfeaturesGradientFeatureParserRuleCall_1_3_0; }

		//pointfeatures+=PointFeature
		public Assignment getPointfeaturesAssignment_1_4() { return cPointfeaturesAssignment_1_4; }

		//PointFeature
		public RuleCall getPointfeaturesPointFeatureParserRuleCall_1_4_0() { return cPointfeaturesPointFeatureParserRuleCall_1_4_0; }

		//sizefeatures+=SizeFeature
		public Assignment getSizefeaturesAssignment_1_5() { return cSizefeaturesAssignment_1_5; }

		//SizeFeature
		public RuleCall getSizefeaturesSizeFeatureParserRuleCall_1_5_0() { return cSizefeaturesSizeFeatureParserRuleCall_1_5_0; }

		//positionfeatures+=PositionFeature
		public Assignment getPositionfeaturesAssignment_1_6() { return cPositionfeaturesAssignment_1_6; }

		//PositionFeature
		public RuleCall getPositionfeaturesPositionFeatureParserRuleCall_1_6_0() { return cPositionfeaturesPositionFeatureParserRuleCall_1_6_0; }

		//colorfeatures+=ColorFeature
		public Assignment getColorfeaturesAssignment_1_7() { return cColorfeaturesAssignment_1_7; }

		//ColorFeature
		public RuleCall getColorfeaturesColorFeatureParserRuleCall_1_7_0() { return cColorfeaturesColorFeatureParserRuleCall_1_7_0; }

		//integerfeatures+=IntegerFeature
		public Assignment getIntegerfeaturesAssignment_1_8() { return cIntegerfeaturesAssignment_1_8; }

		//IntegerFeature
		public RuleCall getIntegerfeaturesIntegerFeatureParserRuleCall_1_8_0() { return cIntegerfeaturesIntegerFeatureParserRuleCall_1_8_0; }

		//booleanfeatures+=BooleanFeature
		public Assignment getBooleanfeaturesAssignment_1_9() { return cBooleanfeaturesAssignment_1_9; }

		//BooleanFeature
		public RuleCall getBooleanfeaturesBooleanFeatureParserRuleCall_1_9_0() { return cBooleanfeaturesBooleanFeatureParserRuleCall_1_9_0; }

		//stringfeatures+=StringFeature
		public Assignment getStringfeaturesAssignment_1_10() { return cStringfeaturesAssignment_1_10; }

		//StringFeature
		public RuleCall getStringfeaturesStringFeatureParserRuleCall_1_10_0() { return cStringfeaturesStringFeatureParserRuleCall_1_10_0; }
	}

	public class StyleFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StyleFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLayoutFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCenterFeatureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StyleFeature:
		//	LayoutFeature | CenterFeature;
		public ParserRule getRule() { return rule; }

		//LayoutFeature | CenterFeature
		public Alternatives getAlternatives() { return cAlternatives; }

		//LayoutFeature
		public RuleCall getLayoutFeatureParserRuleCall_0() { return cLayoutFeatureParserRuleCall_0; }

		//CenterFeature
		public RuleCall getCenterFeatureParserRuleCall_1() { return cCenterFeatureParserRuleCall_1; }
	}

	public class LayoutFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LayoutFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeyLayoutKeyword_0_0 = (Keyword)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueHorizontalKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueVerticalKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueOverKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//LayoutFeature:
		//	key="layout" ":" value=("horizontal" | "vertical" | "over");
		public ParserRule getRule() { return rule; }

		//key="layout" ":" value=("horizontal" | "vertical" | "over")
		public Group getGroup() { return cGroup; }

		//key="layout"
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//"layout"
		public Keyword getKeyLayoutKeyword_0_0() { return cKeyLayoutKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("horizontal" | "vertical" | "over")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"horizontal" | "vertical" | "over"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"horizontal"
		public Keyword getValueHorizontalKeyword_2_0_0() { return cValueHorizontalKeyword_2_0_0; }

		//"vertical"
		public Keyword getValueVerticalKeyword_2_0_1() { return cValueVerticalKeyword_2_0_1; }

		//"over"
		public Keyword getValueOverKeyword_2_0_2() { return cValueOverKeyword_2_0_2; }
	}

	public class CenterFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CenterFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeyCenterKeyword_0_0 = (Keyword)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueHorizontalKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueVerticalKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueBothKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//CenterFeature:
		//	key="center" ":" value=("horizontal" | "vertical" | "both");
		public ParserRule getRule() { return rule; }

		//key="center" ":" value=("horizontal" | "vertical" | "both")
		public Group getGroup() { return cGroup; }

		//key="center"
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//"center"
		public Keyword getKeyCenterKeyword_0_0() { return cKeyCenterKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("horizontal" | "vertical" | "both")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"horizontal" | "vertical" | "both"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"horizontal"
		public Keyword getValueHorizontalKeyword_2_0_0() { return cValueHorizontalKeyword_2_0_0; }

		//"vertical"
		public Keyword getValueVerticalKeyword_2_0_1() { return cValueVerticalKeyword_2_0_1; }

		//"both"
		public Keyword getValueBothKeyword_2_0_2() { return cValueBothKeyword_2_0_2; }
	}

	public class AlignFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AlignFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeyTextAlignKeyword_0_0 = (Keyword)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueLeftKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueMiddleKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueRightKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//AlignFeature:
		//	key="text-align" ":" value=("left" | "middle" | "right");
		public ParserRule getRule() { return rule; }

		//key="text-align" ":" value=("left" | "middle" | "right")
		public Group getGroup() { return cGroup; }

		//key="text-align"
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//"text-align"
		public Keyword getKeyTextAlignKeyword_0_0() { return cKeyTextAlignKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("left" | "middle" | "right")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"left" | "middle" | "right"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"left"
		public Keyword getValueLeftKeyword_2_0_0() { return cValueLeftKeyword_2_0_0; }

		//"middle"
		public Keyword getValueMiddleKeyword_2_0_1() { return cValueMiddleKeyword_2_0_1; }

		//"right"
		public Keyword getValueRightKeyword_2_0_2() { return cValueRightKeyword_2_0_2; }
	}

	public class GradientFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GradientFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeyGradientKeyword_0_0 = (Keyword)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueBlueWhiteKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueBlueWhiteGlossKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueCopperWhiteGlossKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueLightGrayKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		private final Keyword cValueLightYellowKeyword_2_0_4 = (Keyword)cValueAlternatives_2_0.eContents().get(4);
		private final Keyword cValueSilverWhiteGlossKeyword_2_0_5 = (Keyword)cValueAlternatives_2_0.eContents().get(5);
		private final Keyword cValueLimeWhiteKeyword_2_0_6 = (Keyword)cValueAlternatives_2_0.eContents().get(6);
		
		//// TODO: enum
		//
		//// TODO: custom gradient
		//
		//GradientFeature:
		//	key="gradient" ":" value=("BlueWhite" | "BlueWhiteGloss" | "CopperWhiteGloss" | "LightGray" | "LightYellow" |
		//	"SilverWhiteGloss" | "LimeWhite");
		public ParserRule getRule() { return rule; }

		//key="gradient" ":" value=("BlueWhite" | "BlueWhiteGloss" | "CopperWhiteGloss" | "LightGray" | "LightYellow" |
		//"SilverWhiteGloss" | "LimeWhite")
		public Group getGroup() { return cGroup; }

		//key="gradient"
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//"gradient"
		public Keyword getKeyGradientKeyword_0_0() { return cKeyGradientKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("BlueWhite" | "BlueWhiteGloss" | "CopperWhiteGloss" | "LightGray" | "LightYellow" | "SilverWhiteGloss" |
		//"LimeWhite")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"BlueWhite" | "BlueWhiteGloss" | "CopperWhiteGloss" | "LightGray" | "LightYellow" | "SilverWhiteGloss" | "LimeWhite"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"BlueWhite"
		public Keyword getValueBlueWhiteKeyword_2_0_0() { return cValueBlueWhiteKeyword_2_0_0; }

		//"BlueWhiteGloss"
		public Keyword getValueBlueWhiteGlossKeyword_2_0_1() { return cValueBlueWhiteGlossKeyword_2_0_1; }

		//"CopperWhiteGloss"
		public Keyword getValueCopperWhiteGlossKeyword_2_0_2() { return cValueCopperWhiteGlossKeyword_2_0_2; }

		//"LightGray"
		public Keyword getValueLightGrayKeyword_2_0_3() { return cValueLightGrayKeyword_2_0_3; }

		//"LightYellow"
		public Keyword getValueLightYellowKeyword_2_0_4() { return cValueLightYellowKeyword_2_0_4; }

		//"SilverWhiteGloss"
		public Keyword getValueSilverWhiteGlossKeyword_2_0_5() { return cValueSilverWhiteGlossKeyword_2_0_5; }

		//"LimeWhite"
		public Keyword getValueLimeWhiteKeyword_2_0_6() { return cValueLimeWhiteKeyword_2_0_6; }
	}

	public class PointFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PointFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXINTTerminalRuleCall_2_0 = (RuleCall)cXAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cYAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cYINTTerminalRuleCall_4_0 = (RuleCall)cYAssignment_4.eContents().get(0);
		
		//PointFeature:
		//	"point" ":" X=INT "," Y=INT;
		public ParserRule getRule() { return rule; }

		//"point" ":" X=INT "," Y=INT
		public Group getGroup() { return cGroup; }

		//"point"
		public Keyword getPointKeyword_0() { return cPointKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//X=INT
		public Assignment getXAssignment_2() { return cXAssignment_2; }

		//INT
		public RuleCall getXINTTerminalRuleCall_2_0() { return cXINTTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//Y=INT
		public Assignment getYAssignment_4() { return cYAssignment_4; }

		//INT
		public RuleCall getYINTTerminalRuleCall_4_0() { return cYINTTerminalRuleCall_4_0; }
	}

	public class SizeFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWidthINTTerminalRuleCall_2_0 = (RuleCall)cWidthAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHeightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHeightINTTerminalRuleCall_4_0 = (RuleCall)cHeightAssignment_4.eContents().get(0);
		
		//SizeFeature:
		//	"size" ":" Width=INT "," Height=INT;
		public ParserRule getRule() { return rule; }

		//"size" ":" Width=INT "," Height=INT
		public Group getGroup() { return cGroup; }

		//"size"
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//Width=INT
		public Assignment getWidthAssignment_2() { return cWidthAssignment_2; }

		//INT
		public RuleCall getWidthINTTerminalRuleCall_2_0() { return cWidthINTTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//Height=INT
		public Assignment getHeightAssignment_4() { return cHeightAssignment_4; }

		//INT
		public RuleCall getHeightINTTerminalRuleCall_4_0() { return cHeightINTTerminalRuleCall_4_0; }
	}

	public class PositionFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PositionFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPositionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXINTTerminalRuleCall_2_0 = (RuleCall)cXAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cYAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cYINTTerminalRuleCall_4_0 = (RuleCall)cYAssignment_4.eContents().get(0);
		
		//PositionFeature:
		//	"position" ":" X=INT "," Y=INT;
		public ParserRule getRule() { return rule; }

		//"position" ":" X=INT "," Y=INT
		public Group getGroup() { return cGroup; }

		//"position"
		public Keyword getPositionKeyword_0() { return cPositionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//X=INT
		public Assignment getXAssignment_2() { return cXAssignment_2; }

		//INT
		public RuleCall getXINTTerminalRuleCall_2_0() { return cXINTTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//Y=INT
		public Assignment getYAssignment_4() { return cYAssignment_4; }

		//INT
		public RuleCall getYINTTerminalRuleCall_4_0() { return cYINTTerminalRuleCall_4_0; }
	}

	public class ColorFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColorFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionAtributeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cKeyAlternatives_1_0 = (Alternatives)cKeyAssignment_1.eContents().get(0);
		private final Keyword cKeyBackgroundKeyword_1_0_0 = (Keyword)cKeyAlternatives_1_0.eContents().get(0);
		private final Keyword cKeyForegroundKeyword_1_0_1 = (Keyword)cKeyAlternatives_1_0.eContents().get(1);
		private final Keyword cKeyBorderKeyword_1_0_2 = (Keyword)cKeyAlternatives_1_0.eContents().get(2);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueColorParserRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Assignment cRgbAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cRgbRGBParserRuleCall_3_1_0 = (RuleCall)cRgbAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAtributeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAtributeIDTerminalRuleCall_4_1_0 = (RuleCall)cAtributeAssignment_4_1.eContents().get(0);
		private final Assignment cOperatorAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Alternatives cOperatorAlternatives_4_2_0 = (Alternatives)cOperatorAssignment_4_2.eContents().get(0);
		private final Keyword cOperatorEqualsSignKeyword_4_2_0_0 = (Keyword)cOperatorAlternatives_4_2_0.eContents().get(0);
		private final Keyword cOperatorLessThanSignGreaterThanSignKeyword_4_2_0_1 = (Keyword)cOperatorAlternatives_4_2_0.eContents().get(1);
		private final Assignment cOptionAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cOptionIDTerminalRuleCall_4_3_0 = (RuleCall)cOptionAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//ColorFeature:
		//	expression=AtributeExpression? key=("background" | "foreground" | "border") ":" (value=Color | rgb=RGB) ("["
		//	atribute=ID operator=("=" | "<>") option=ID "]")?;
		public ParserRule getRule() { return rule; }

		//expression=AtributeExpression? key=("background" | "foreground" | "border") ":" (value=Color | rgb=RGB) ("[" atribute=ID
		//operator=("=" | "<>") option=ID "]")?
		public Group getGroup() { return cGroup; }

		//expression=AtributeExpression?
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }

		//AtributeExpression
		public RuleCall getExpressionAtributeExpressionParserRuleCall_0_0() { return cExpressionAtributeExpressionParserRuleCall_0_0; }

		//key=("background" | "foreground" | "border")
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//"background" | "foreground" | "border"
		public Alternatives getKeyAlternatives_1_0() { return cKeyAlternatives_1_0; }

		//"background"
		public Keyword getKeyBackgroundKeyword_1_0_0() { return cKeyBackgroundKeyword_1_0_0; }

		//"foreground"
		public Keyword getKeyForegroundKeyword_1_0_1() { return cKeyForegroundKeyword_1_0_1; }

		//"border"
		public Keyword getKeyBorderKeyword_1_0_2() { return cKeyBorderKeyword_1_0_2; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//value=Color | rgb=RGB
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//value=Color
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }

		//Color
		public RuleCall getValueColorParserRuleCall_3_0_0() { return cValueColorParserRuleCall_3_0_0; }

		//rgb=RGB
		public Assignment getRgbAssignment_3_1() { return cRgbAssignment_3_1; }

		//RGB
		public RuleCall getRgbRGBParserRuleCall_3_1_0() { return cRgbRGBParserRuleCall_3_1_0; }

		//("[" atribute=ID operator=("=" | "<>") option=ID "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//atribute=ID
		public Assignment getAtributeAssignment_4_1() { return cAtributeAssignment_4_1; }

		//ID
		public RuleCall getAtributeIDTerminalRuleCall_4_1_0() { return cAtributeIDTerminalRuleCall_4_1_0; }

		//operator=("=" | "<>")
		public Assignment getOperatorAssignment_4_2() { return cOperatorAssignment_4_2; }

		//"=" | "<>"
		public Alternatives getOperatorAlternatives_4_2_0() { return cOperatorAlternatives_4_2_0; }

		//"="
		public Keyword getOperatorEqualsSignKeyword_4_2_0_0() { return cOperatorEqualsSignKeyword_4_2_0_0; }

		//"<>"
		public Keyword getOperatorLessThanSignGreaterThanSignKeyword_4_2_0_1() { return cOperatorLessThanSignGreaterThanSignKeyword_4_2_0_1; }

		//option=ID
		public Assignment getOptionAssignment_4_3() { return cOptionAssignment_4_3; }

		//ID
		public RuleCall getOptionIDTerminalRuleCall_4_3_0() { return cOptionIDTerminalRuleCall_4_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
	}

	public class ColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Color");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cWHITEKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cBLACKKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cBLUEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGREENKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cREDKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cYELLOWKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cCYANKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cORANGEKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		
		//// TODO enum , já agora 16 standard
		//
		//Color:
		//	"WHITE" | "BLACK" | "BLUE" | "GREEN" | "RED" | "YELLOW" | "CYAN" | "ORANGE";
		public ParserRule getRule() { return rule; }

		//"WHITE" | "BLACK" | "BLUE" | "GREEN" | "RED" | "YELLOW" | "CYAN" | "ORANGE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"WHITE"
		public Keyword getWHITEKeyword_0() { return cWHITEKeyword_0; }

		//"BLACK"
		public Keyword getBLACKKeyword_1() { return cBLACKKeyword_1; }

		//"BLUE"
		public Keyword getBLUEKeyword_2() { return cBLUEKeyword_2; }

		//"GREEN"
		public Keyword getGREENKeyword_3() { return cGREENKeyword_3; }

		//"RED"
		public Keyword getREDKeyword_4() { return cREDKeyword_4; }

		//"YELLOW"
		public Keyword getYELLOWKeyword_5() { return cYELLOWKeyword_5; }

		//"CYAN"
		public Keyword getCYANKeyword_6() { return cCYANKeyword_6; }

		//"ORANGE"
		public Keyword getORANGEKeyword_7() { return cORANGEKeyword_7; }
	}

	public class RGBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RGB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRGBKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRINTTerminalRuleCall_2_0 = (RuleCall)cRAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGINTTerminalRuleCall_4_0 = (RuleCall)cGAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBINTTerminalRuleCall_6_0 = (RuleCall)cBAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RGB:
		//	"RGB" "(" R=INT "," G=INT "," B=INT ")";
		public ParserRule getRule() { return rule; }

		//"RGB" "(" R=INT "," G=INT "," B=INT ")"
		public Group getGroup() { return cGroup; }

		//"RGB"
		public Keyword getRGBKeyword_0() { return cRGBKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//R=INT
		public Assignment getRAssignment_2() { return cRAssignment_2; }

		//INT
		public RuleCall getRINTTerminalRuleCall_2_0() { return cRINTTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//G=INT
		public Assignment getGAssignment_4() { return cGAssignment_4; }

		//INT
		public RuleCall getGINTTerminalRuleCall_4_0() { return cGINTTerminalRuleCall_4_0; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//B=INT
		public Assignment getBAssignment_6() { return cBAssignment_6; }

		//INT
		public RuleCall getBINTTerminalRuleCall_6_0() { return cBINTTerminalRuleCall_6_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}

	public class IntegerFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionAtributeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cKeyAlternatives_1_0 = (Alternatives)cKeyAssignment_1.eContents().get(0);
		private final Keyword cKeyLineWidthKeyword_1_0_0 = (Keyword)cKeyAlternatives_1_0.eContents().get(0);
		private final Keyword cKeyTopKeyword_1_0_1 = (Keyword)cKeyAlternatives_1_0.eContents().get(1);
		private final Keyword cKeyLeftKeyword_1_0_2 = (Keyword)cKeyAlternatives_1_0.eContents().get(2);
		private final Keyword cKeyWidthKeyword_1_0_3 = (Keyword)cKeyAlternatives_1_0.eContents().get(3);
		private final Keyword cKeyHeightKeyword_1_0_4 = (Keyword)cKeyAlternatives_1_0.eContents().get(4);
		private final Keyword cKeyAngleKeyword_1_0_5 = (Keyword)cKeyAlternatives_1_0.eContents().get(5);
		private final Keyword cKeyCornerKeyword_1_0_6 = (Keyword)cKeyAlternatives_1_0.eContents().get(6);
		private final Keyword cKeyTransparencyKeyword_1_0_7 = (Keyword)cKeyAlternatives_1_0.eContents().get(7);
		private final Keyword cKeyFontSizeKeyword_1_0_8 = (Keyword)cKeyAlternatives_1_0.eContents().get(8);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueINTTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//IntegerFeature:
		//	expression=AtributeExpression? key=("line-width" | "top" | "left" | "width" | "height" | "angle" | "corner" |
		//	"transparency" | "font-size") ":" value=INT;
		public ParserRule getRule() { return rule; }

		//expression=AtributeExpression? key=("line-width" | "top" | "left" | "width" | "height" | "angle" | "corner" |
		//"transparency" | "font-size") ":" value=INT
		public Group getGroup() { return cGroup; }

		//expression=AtributeExpression?
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }

		//AtributeExpression
		public RuleCall getExpressionAtributeExpressionParserRuleCall_0_0() { return cExpressionAtributeExpressionParserRuleCall_0_0; }

		//key=("line-width" | "top" | "left" | "width" | "height" | "angle" | "corner" | "transparency" | "font-size")
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//"line-width" | "top" | "left" | "width" | "height" | "angle" | "corner" | "transparency" | "font-size"
		public Alternatives getKeyAlternatives_1_0() { return cKeyAlternatives_1_0; }

		//"line-width"
		public Keyword getKeyLineWidthKeyword_1_0_0() { return cKeyLineWidthKeyword_1_0_0; }

		//"top"
		public Keyword getKeyTopKeyword_1_0_1() { return cKeyTopKeyword_1_0_1; }

		//"left"
		public Keyword getKeyLeftKeyword_1_0_2() { return cKeyLeftKeyword_1_0_2; }

		//"width"
		public Keyword getKeyWidthKeyword_1_0_3() { return cKeyWidthKeyword_1_0_3; }

		//"height"
		public Keyword getKeyHeightKeyword_1_0_4() { return cKeyHeightKeyword_1_0_4; }

		//"angle"
		public Keyword getKeyAngleKeyword_1_0_5() { return cKeyAngleKeyword_1_0_5; }

		//"corner"
		public Keyword getKeyCornerKeyword_1_0_6() { return cKeyCornerKeyword_1_0_6; }

		//"transparency"
		public Keyword getKeyTransparencyKeyword_1_0_7() { return cKeyTransparencyKeyword_1_0_7; }

		//"font-size"
		public Keyword getKeyFontSizeKeyword_1_0_8() { return cKeyFontSizeKeyword_1_0_8; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//value=INT
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_3_0() { return cValueINTTerminalRuleCall_3_0; }
	}

	public class StringFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionAtributeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cKeyAlternatives_1_0 = (Alternatives)cKeyAssignment_1.eContents().get(0);
		private final Keyword cKeyTextValueKeyword_1_0_0 = (Keyword)cKeyAlternatives_1_0.eContents().get(0);
		private final Keyword cKeyFontNameKeyword_1_0_1 = (Keyword)cKeyAlternatives_1_0.eContents().get(1);
		private final Keyword cKeyIconKeyword_1_0_2 = (Keyword)cKeyAlternatives_1_0.eContents().get(2);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cValueLAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cValueLSTRINGTerminalRuleCall_3_1_0_0 = (RuleCall)cValueLAssignment_3_1_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cAttributeAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cAttributeIDTerminalRuleCall_3_1_2_0 = (RuleCall)cAttributeAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cAttributeAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final RuleCall cAttributeIDTerminalRuleCall_3_2_0_0 = (RuleCall)cAttributeAssignment_3_2_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cValueRAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cValueRSTRINGTerminalRuleCall_3_2_2_0 = (RuleCall)cValueRAssignment_3_2_2.eContents().get(0);
		private final Assignment cAttributeAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cAttributeIDTerminalRuleCall_3_3_0 = (RuleCall)cAttributeAssignment_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cAlternatives_3.eContents().get(4);
		private final Assignment cValueLAssignment_3_4_0 = (Assignment)cGroup_3_4.eContents().get(0);
		private final RuleCall cValueLSTRINGTerminalRuleCall_3_4_0_0 = (RuleCall)cValueLAssignment_3_4_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cAttributeAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cAttributeIDTerminalRuleCall_3_4_2_0 = (RuleCall)cAttributeAssignment_3_4_2.eContents().get(0);
		private final Keyword cPlusSignKeyword_3_4_3 = (Keyword)cGroup_3_4.eContents().get(3);
		private final Assignment cValueRAssignment_3_4_4 = (Assignment)cGroup_3_4.eContents().get(4);
		private final RuleCall cValueRSTRINGTerminalRuleCall_3_4_4_0 = (RuleCall)cValueRAssignment_3_4_4.eContents().get(0);
		
		//StringFeature:
		//	expression=AtributeExpression? key=("text-value" | "font-name" | "icon") ":" (value=STRING | valueL=STRING "+"
		//	attribute=ID | attribute=ID "+" valueR=STRING | attribute=ID | valueL=STRING "+" attribute=ID "+" valueR=STRING)?;
		public ParserRule getRule() { return rule; }

		//expression=AtributeExpression? key=("text-value" | "font-name" | "icon") ":" (value=STRING | valueL=STRING "+"
		//attribute=ID | attribute=ID "+" valueR=STRING | attribute=ID | valueL=STRING "+" attribute=ID "+" valueR=STRING)?
		public Group getGroup() { return cGroup; }

		//expression=AtributeExpression?
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }

		//AtributeExpression
		public RuleCall getExpressionAtributeExpressionParserRuleCall_0_0() { return cExpressionAtributeExpressionParserRuleCall_0_0; }

		//key=("text-value" | "font-name" | "icon")
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//"text-value" | "font-name" | "icon"
		public Alternatives getKeyAlternatives_1_0() { return cKeyAlternatives_1_0; }

		//"text-value"
		public Keyword getKeyTextValueKeyword_1_0_0() { return cKeyTextValueKeyword_1_0_0; }

		//"font-name"
		public Keyword getKeyFontNameKeyword_1_0_1() { return cKeyFontNameKeyword_1_0_1; }

		//"icon"
		public Keyword getKeyIconKeyword_1_0_2() { return cKeyIconKeyword_1_0_2; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(value=STRING | valueL=STRING "+" attribute=ID | attribute=ID "+" valueR=STRING | attribute=ID | valueL=STRING "+"
		//attribute=ID "+" valueR=STRING)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//value=STRING
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0_0() { return cValueSTRINGTerminalRuleCall_3_0_0; }

		//valueL=STRING "+" attribute=ID
		public Group getGroup_3_1() { return cGroup_3_1; }

		//valueL=STRING
		public Assignment getValueLAssignment_3_1_0() { return cValueLAssignment_3_1_0; }

		//STRING
		public RuleCall getValueLSTRINGTerminalRuleCall_3_1_0_0() { return cValueLSTRINGTerminalRuleCall_3_1_0_0; }

		//"+"
		public Keyword getPlusSignKeyword_3_1_1() { return cPlusSignKeyword_3_1_1; }

		//attribute=ID
		public Assignment getAttributeAssignment_3_1_2() { return cAttributeAssignment_3_1_2; }

		//ID
		public RuleCall getAttributeIDTerminalRuleCall_3_1_2_0() { return cAttributeIDTerminalRuleCall_3_1_2_0; }

		//attribute=ID "+" valueR=STRING
		public Group getGroup_3_2() { return cGroup_3_2; }

		//attribute=ID
		public Assignment getAttributeAssignment_3_2_0() { return cAttributeAssignment_3_2_0; }

		//ID
		public RuleCall getAttributeIDTerminalRuleCall_3_2_0_0() { return cAttributeIDTerminalRuleCall_3_2_0_0; }

		//"+"
		public Keyword getPlusSignKeyword_3_2_1() { return cPlusSignKeyword_3_2_1; }

		//valueR=STRING
		public Assignment getValueRAssignment_3_2_2() { return cValueRAssignment_3_2_2; }

		//STRING
		public RuleCall getValueRSTRINGTerminalRuleCall_3_2_2_0() { return cValueRSTRINGTerminalRuleCall_3_2_2_0; }

		//attribute=ID
		public Assignment getAttributeAssignment_3_3() { return cAttributeAssignment_3_3; }

		//ID
		public RuleCall getAttributeIDTerminalRuleCall_3_3_0() { return cAttributeIDTerminalRuleCall_3_3_0; }

		//valueL=STRING "+" attribute=ID "+" valueR=STRING
		public Group getGroup_3_4() { return cGroup_3_4; }

		//valueL=STRING
		public Assignment getValueLAssignment_3_4_0() { return cValueLAssignment_3_4_0; }

		//STRING
		public RuleCall getValueLSTRINGTerminalRuleCall_3_4_0_0() { return cValueLSTRINGTerminalRuleCall_3_4_0_0; }

		//"+"
		public Keyword getPlusSignKeyword_3_4_1() { return cPlusSignKeyword_3_4_1; }

		//attribute=ID
		public Assignment getAttributeAssignment_3_4_2() { return cAttributeAssignment_3_4_2; }

		//ID
		public RuleCall getAttributeIDTerminalRuleCall_3_4_2_0() { return cAttributeIDTerminalRuleCall_3_4_2_0; }

		//"+"
		public Keyword getPlusSignKeyword_3_4_3() { return cPlusSignKeyword_3_4_3; }

		//valueR=STRING
		public Assignment getValueRAssignment_3_4_4() { return cValueRAssignment_3_4_4; }

		//STRING
		public RuleCall getValueRSTRINGTerminalRuleCall_3_4_4_0() { return cValueRSTRINGTerminalRuleCall_3_4_4_0; }
	}

	public class BooleanFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionAtributeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cKeyAlternatives_1_0 = (Alternatives)cKeyAssignment_1.eContents().get(0);
		private final Keyword cKeyTextEditableKeyword_1_0_0 = (Keyword)cKeyAlternatives_1_0.eContents().get(0);
		private final Keyword cKeyFontItalicKeyword_1_0_1 = (Keyword)cKeyAlternatives_1_0.eContents().get(1);
		private final Keyword cKeyFontBoldKeyword_1_0_2 = (Keyword)cKeyAlternatives_1_0.eContents().get(2);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cValueAlternatives_3_0 = (Alternatives)cValueAssignment_3.eContents().get(0);
		private final Keyword cValueTrueKeyword_3_0_0 = (Keyword)cValueAlternatives_3_0.eContents().get(0);
		private final Keyword cValueFalseKeyword_3_0_1 = (Keyword)cValueAlternatives_3_0.eContents().get(1);
		
		//BooleanFeature:
		//	expression=AtributeExpression? key=("text-editable" | "font-italic" | "font-bold") ":" value=("true" | "false");
		public ParserRule getRule() { return rule; }

		//expression=AtributeExpression? key=("text-editable" | "font-italic" | "font-bold") ":" value=("true" | "false")
		public Group getGroup() { return cGroup; }

		//expression=AtributeExpression?
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }

		//AtributeExpression
		public RuleCall getExpressionAtributeExpressionParserRuleCall_0_0() { return cExpressionAtributeExpressionParserRuleCall_0_0; }

		//key=("text-editable" | "font-italic" | "font-bold")
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//"text-editable" | "font-italic" | "font-bold"
		public Alternatives getKeyAlternatives_1_0() { return cKeyAlternatives_1_0; }

		//"text-editable"
		public Keyword getKeyTextEditableKeyword_1_0_0() { return cKeyTextEditableKeyword_1_0_0; }

		//"font-italic"
		public Keyword getKeyFontItalicKeyword_1_0_1() { return cKeyFontItalicKeyword_1_0_1; }

		//"font-bold"
		public Keyword getKeyFontBoldKeyword_1_0_2() { return cKeyFontBoldKeyword_1_0_2; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//value=("true" | "false")
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"true" | "false"
		public Alternatives getValueAlternatives_3_0() { return cValueAlternatives_3_0; }

		//"true"
		public Keyword getValueTrueKeyword_3_0_0() { return cValueTrueKeyword_3_0_0; }

		//"false"
		public Keyword getValueFalseKeyword_3_0_1() { return cValueFalseKeyword_3_0_1; }
	}

	public class LineFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LineFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionAtributeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cKeyLineStyleKeyword_1_0 = (Keyword)cKeyAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueLineStyleParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//LineFeature:
		//	expression=AtributeExpression? key="line-style" ":" value=LineStyle;
		public ParserRule getRule() { return rule; }

		//expression=AtributeExpression? key="line-style" ":" value=LineStyle
		public Group getGroup() { return cGroup; }

		//expression=AtributeExpression?
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }

		//AtributeExpression
		public RuleCall getExpressionAtributeExpressionParserRuleCall_0_0() { return cExpressionAtributeExpressionParserRuleCall_0_0; }

		//key="line-style"
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//"line-style"
		public Keyword getKeyLineStyleKeyword_1_0() { return cKeyLineStyleKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//value=LineStyle
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//LineStyle
		public RuleCall getValueLineStyleParserRuleCall_3_0() { return cValueLineStyleParserRuleCall_3_0; }
	}

	public class LineStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LineStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSolidKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDashKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDotKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDashdotKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//// TODO enum  - aspeto do dash/dot/...
		//
		//LineStyle:
		//	"solid" | "dash" | "dot" | "dashdot";
		public ParserRule getRule() { return rule; }

		//"solid" | "dash" | "dot" | "dashdot"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"solid"
		public Keyword getSolidKeyword_0() { return cSolidKeyword_0; }

		//"dash"
		public Keyword getDashKeyword_1() { return cDashKeyword_1; }

		//"dot"
		public Keyword getDotKeyword_2() { return cDotKeyword_2; }

		//"dashdot"
		public Keyword getDashdotKeyword_3() { return cDashdotKeyword_3; }
	}

	public class AtributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtributeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cOperatorAlternatives_1_0 = (Alternatives)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cOperatorEqualsSignKeyword_1_0_0 = (Keyword)cOperatorAlternatives_1_0.eContents().get(0);
		private final Keyword cOperatorLessThanSignGreaterThanSignKeyword_1_0_1 = (Keyword)cOperatorAlternatives_1_0.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAtributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// rename? ConditionalExpression?
		//
		//// TODO: key modelReference ecore::EAttribute
		//
		//AtributeExpression:
		//	key=ID operator=("=" | "<>") value=AtributeValue "->";
		public ParserRule getRule() { return rule; }

		//key=ID operator=("=" | "<>") value=AtributeValue "->"
		public Group getGroup() { return cGroup; }

		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }

		//operator=("=" | "<>")
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }

		//"=" | "<>"
		public Alternatives getOperatorAlternatives_1_0() { return cOperatorAlternatives_1_0; }

		//"="
		public Keyword getOperatorEqualsSignKeyword_1_0_0() { return cOperatorEqualsSignKeyword_1_0_0; }

		//"<>"
		public Keyword getOperatorLessThanSignGreaterThanSignKeyword_1_0_1() { return cOperatorLessThanSignGreaterThanSignKeyword_1_0_1; }

		//value=AtributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//AtributeValue
		public RuleCall getValueAtributeValueParserRuleCall_2_0() { return cValueAtributeValueParserRuleCall_2_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
	}

	public class AtributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtributeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueINTAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueINTINTTerminalRuleCall_0_0 = (RuleCall)cValueINTAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cValueINTAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValueINTINTTerminalRuleCall_1_0_0 = (RuleCall)cValueINTAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cValueDECAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValueDECINTTerminalRuleCall_1_2_0 = (RuleCall)cValueDECAssignment_1_2.eContents().get(0);
		private final Assignment cValueIDAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cValueIDIDTerminalRuleCall_2_0 = (RuleCall)cValueIDAssignment_2.eContents().get(0);
		private final Assignment cValueBOOLAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Alternatives cValueBOOLAlternatives_3_0 = (Alternatives)cValueBOOLAssignment_3.eContents().get(0);
		private final Keyword cValueBOOLTrueKeyword_3_0_0 = (Keyword)cValueBOOLAlternatives_3_0.eContents().get(0);
		private final Keyword cValueBOOLFalseKeyword_3_0_1 = (Keyword)cValueBOOLAlternatives_3_0.eContents().get(1);
		private final Assignment cValueSTRINGAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cValueSTRINGSTRINGTerminalRuleCall_4_0 = (RuleCall)cValueSTRINGAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cValueDAYAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cValueDAYINTTerminalRuleCall_5_0_0 = (RuleCall)cValueDAYAssignment_5_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cValueMONTHAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cValueMONTHINTTerminalRuleCall_5_2_0 = (RuleCall)cValueMONTHAssignment_5_2.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cValueYEARAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cValueYEARINTTerminalRuleCall_5_4_0 = (RuleCall)cValueYEARAssignment_5_4.eContents().get(0);
		
		//// future
		//
		////AttributeReference:
		//
		////	modelAttribute=[ecore::EAttribute|QualifiedName] ('/' path+=AttributeReference)*
		//
		////;
		//
		//AtributeValue:
		//	valueINT=INT | valueINT=INT "." valueDEC=INT | valueID=ID | valueBOOL=("true" | "false") | valueSTRING=STRING |
		//	valueDAY=INT "-" valueMONTH=INT "-" valueYEAR=INT;
		public ParserRule getRule() { return rule; }

		//valueINT=INT | valueINT=INT "." valueDEC=INT | valueID=ID | valueBOOL=("true" | "false") | valueSTRING=STRING |
		//valueDAY=INT "-" valueMONTH=INT "-" valueYEAR=INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//valueINT=INT
		public Assignment getValueINTAssignment_0() { return cValueINTAssignment_0; }

		//INT
		public RuleCall getValueINTINTTerminalRuleCall_0_0() { return cValueINTINTTerminalRuleCall_0_0; }

		//valueINT=INT "." valueDEC=INT
		public Group getGroup_1() { return cGroup_1; }

		//valueINT=INT
		public Assignment getValueINTAssignment_1_0() { return cValueINTAssignment_1_0; }

		//INT
		public RuleCall getValueINTINTTerminalRuleCall_1_0_0() { return cValueINTINTTerminalRuleCall_1_0_0; }

		//"."
		public Keyword getFullStopKeyword_1_1() { return cFullStopKeyword_1_1; }

		//valueDEC=INT
		public Assignment getValueDECAssignment_1_2() { return cValueDECAssignment_1_2; }

		//INT
		public RuleCall getValueDECINTTerminalRuleCall_1_2_0() { return cValueDECINTTerminalRuleCall_1_2_0; }

		//valueID=ID
		public Assignment getValueIDAssignment_2() { return cValueIDAssignment_2; }

		//ID
		public RuleCall getValueIDIDTerminalRuleCall_2_0() { return cValueIDIDTerminalRuleCall_2_0; }

		//valueBOOL=("true" | "false")
		public Assignment getValueBOOLAssignment_3() { return cValueBOOLAssignment_3; }

		//"true" | "false"
		public Alternatives getValueBOOLAlternatives_3_0() { return cValueBOOLAlternatives_3_0; }

		//"true"
		public Keyword getValueBOOLTrueKeyword_3_0_0() { return cValueBOOLTrueKeyword_3_0_0; }

		//"false"
		public Keyword getValueBOOLFalseKeyword_3_0_1() { return cValueBOOLFalseKeyword_3_0_1; }

		//valueSTRING=STRING
		public Assignment getValueSTRINGAssignment_4() { return cValueSTRINGAssignment_4; }

		//STRING
		public RuleCall getValueSTRINGSTRINGTerminalRuleCall_4_0() { return cValueSTRINGSTRINGTerminalRuleCall_4_0; }

		//valueDAY=INT "-" valueMONTH=INT "-" valueYEAR=INT
		public Group getGroup_5() { return cGroup_5; }

		//valueDAY=INT
		public Assignment getValueDAYAssignment_5_0() { return cValueDAYAssignment_5_0; }

		//INT
		public RuleCall getValueDAYINTTerminalRuleCall_5_0_0() { return cValueDAYINTTerminalRuleCall_5_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_5_1() { return cHyphenMinusKeyword_5_1; }

		//valueMONTH=INT
		public Assignment getValueMONTHAssignment_5_2() { return cValueMONTHAssignment_5_2; }

		//INT
		public RuleCall getValueMONTHINTTerminalRuleCall_5_2_0() { return cValueMONTHINTTerminalRuleCall_5_2_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_5_3() { return cHyphenMinusKeyword_5_3; }

		//valueYEAR=INT
		public Assignment getValueYEARAssignment_5_4() { return cValueYEARAssignment_5_4; }

		//INT
		public RuleCall getValueYEARINTTerminalRuleCall_5_4_0() { return cValueYEARINTTerminalRuleCall_5_4_0; }
	}
	
	
	public class ContainerLayoutElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ContainerLayout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTACKEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTACKStackKeyword_0_0 = (Keyword)cSTACKEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFREEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFREEFreeKeyword_1_0 = (Keyword)cFREEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ContainerLayout:
		//	STACK="stack" | FREE="free";
		public EnumRule getRule() { return rule; }

		//STACK="stack" | FREE="free"
		public Alternatives getAlternatives() { return cAlternatives; }

		//STACK="stack"
		public EnumLiteralDeclaration getSTACKEnumLiteralDeclaration_0() { return cSTACKEnumLiteralDeclaration_0; }

		//"stack"
		public Keyword getSTACKStackKeyword_0_0() { return cSTACKStackKeyword_0_0; }

		//FREE="free"
		public EnumLiteralDeclaration getFREEEnumLiteralDeclaration_1() { return cFREEEnumLiteralDeclaration_1; }

		//"free"
		public Keyword getFREEFreeKeyword_1_0() { return cFREEFreeKeyword_1_0; }
	}

	public class FigureShapeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FigureShape");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSQUAREEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSQUARESquareKeyword_0_0 = (Keyword)cSQUAREEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRECTANGLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRECTANGLERectangleKeyword_1_0 = (Keyword)cRECTANGLEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cROUNDED_RECTANGLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cROUNDED_RECTANGLERoundedRectangleKeyword_2_0 = (Keyword)cROUNDED_RECTANGLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCIRCLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCIRCLECircleKeyword_3_0 = (Keyword)cCIRCLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cELLIPSEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cELLIPSEEllipseKeyword_4_0 = (Keyword)cELLIPSEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTRIANGLEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTRIANGLETriangleKeyword_5_0 = (Keyword)cTRIANGLEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cRHOMBUSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cRHOMBUSRhombusKeyword_6_0 = (Keyword)cRHOMBUSEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cPOLYGONEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cPOLYGONPolygonKeyword_7_0 = (Keyword)cPOLYGONEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cPOLYLINEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cPOLYLINEPolylineKeyword_8_0 = (Keyword)cPOLYLINEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cLABELEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cLABELLabelKeyword_9_0 = (Keyword)cLABELEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cIMAGEEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cIMAGEImageKeyword_10_0 = (Keyword)cIMAGEEnumLiteralDeclaration_10.eContents().get(0);
		
		//// TODO: lowercase
		//
		//enum FigureShape:
		//	SQUARE="Square" | RECTANGLE="Rectangle" | ROUNDED_RECTANGLE="RoundedRectangle" | CIRCLE="Circle" | ELLIPSE="Ellipse" |
		//	TRIANGLE="Triangle" | RHOMBUS="Rhombus" | POLYGON="Polygon" | POLYLINE="Polyline" | LABEL="Label" | IMAGE="Image";
		public EnumRule getRule() { return rule; }

		//SQUARE="Square" | RECTANGLE="Rectangle" | ROUNDED_RECTANGLE="RoundedRectangle" | CIRCLE="Circle" | ELLIPSE="Ellipse" |
		//TRIANGLE="Triangle" | RHOMBUS="Rhombus" | POLYGON="Polygon" | POLYLINE="Polyline" | LABEL="Label" | IMAGE="Image"
		public Alternatives getAlternatives() { return cAlternatives; }

		//SQUARE="Square"
		public EnumLiteralDeclaration getSQUAREEnumLiteralDeclaration_0() { return cSQUAREEnumLiteralDeclaration_0; }

		//"Square"
		public Keyword getSQUARESquareKeyword_0_0() { return cSQUARESquareKeyword_0_0; }

		//RECTANGLE="Rectangle"
		public EnumLiteralDeclaration getRECTANGLEEnumLiteralDeclaration_1() { return cRECTANGLEEnumLiteralDeclaration_1; }

		//"Rectangle"
		public Keyword getRECTANGLERectangleKeyword_1_0() { return cRECTANGLERectangleKeyword_1_0; }

		//ROUNDED_RECTANGLE="RoundedRectangle"
		public EnumLiteralDeclaration getROUNDED_RECTANGLEEnumLiteralDeclaration_2() { return cROUNDED_RECTANGLEEnumLiteralDeclaration_2; }

		//"RoundedRectangle"
		public Keyword getROUNDED_RECTANGLERoundedRectangleKeyword_2_0() { return cROUNDED_RECTANGLERoundedRectangleKeyword_2_0; }

		//CIRCLE="Circle"
		public EnumLiteralDeclaration getCIRCLEEnumLiteralDeclaration_3() { return cCIRCLEEnumLiteralDeclaration_3; }

		//"Circle"
		public Keyword getCIRCLECircleKeyword_3_0() { return cCIRCLECircleKeyword_3_0; }

		//ELLIPSE="Ellipse"
		public EnumLiteralDeclaration getELLIPSEEnumLiteralDeclaration_4() { return cELLIPSEEnumLiteralDeclaration_4; }

		//"Ellipse"
		public Keyword getELLIPSEEllipseKeyword_4_0() { return cELLIPSEEllipseKeyword_4_0; }

		//TRIANGLE="Triangle"
		public EnumLiteralDeclaration getTRIANGLEEnumLiteralDeclaration_5() { return cTRIANGLEEnumLiteralDeclaration_5; }

		//"Triangle"
		public Keyword getTRIANGLETriangleKeyword_5_0() { return cTRIANGLETriangleKeyword_5_0; }

		//RHOMBUS="Rhombus"
		public EnumLiteralDeclaration getRHOMBUSEnumLiteralDeclaration_6() { return cRHOMBUSEnumLiteralDeclaration_6; }

		//"Rhombus"
		public Keyword getRHOMBUSRhombusKeyword_6_0() { return cRHOMBUSRhombusKeyword_6_0; }

		//POLYGON="Polygon"
		public EnumLiteralDeclaration getPOLYGONEnumLiteralDeclaration_7() { return cPOLYGONEnumLiteralDeclaration_7; }

		//"Polygon"
		public Keyword getPOLYGONPolygonKeyword_7_0() { return cPOLYGONPolygonKeyword_7_0; }

		//POLYLINE="Polyline"
		public EnumLiteralDeclaration getPOLYLINEEnumLiteralDeclaration_8() { return cPOLYLINEEnumLiteralDeclaration_8; }

		//"Polyline"
		public Keyword getPOLYLINEPolylineKeyword_8_0() { return cPOLYLINEPolylineKeyword_8_0; }

		//LABEL="Label"
		public EnumLiteralDeclaration getLABELEnumLiteralDeclaration_9() { return cLABELEnumLiteralDeclaration_9; }

		//"Label"
		public Keyword getLABELLabelKeyword_9_0() { return cLABELLabelKeyword_9_0; }

		//IMAGE="Image"
		public EnumLiteralDeclaration getIMAGEEnumLiteralDeclaration_10() { return cIMAGEEnumLiteralDeclaration_10; }

		//"Image"
		public Keyword getIMAGEImageKeyword_10_0() { return cIMAGEImageKeyword_10_0; }
	}
	
	private XDiagramElements pXDiagram;
	private ImportStatementElements pImportStatement;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildCardElements pQualifiedNameWithWildCard;
	private StyleElements pStyle;
	private DiagramElementElements pDiagramElement;
	private NodeElements pNode;
	private AttributeElements pAttribute;
	private NodeFigureElements pNodeFigure;
	private NodeContainerElements pNodeContainer;
	private ContainerLayoutElements unknownRuleContainerLayout;
	private LinkElements pLink;
	private DecoratorElements pDecorator;
	private DynamicFigureElements pDynamicFigure;
	private DynamicElementElements pDynamicElement;
	private StaticFigureElements pStaticFigure;
	private StaticElementElements pStaticElement;
	private FigureShapeElements unknownRuleFigureShape;
	private NodeAnchorElements pNodeAnchor;
	private ArrowAnchorElements pArrowAnchor;
	private FigureFeaturesElements pFigureFeatures;
	private StyleFeatureElements pStyleFeature;
	private LayoutFeatureElements pLayoutFeature;
	private CenterFeatureElements pCenterFeature;
	private AlignFeatureElements pAlignFeature;
	private GradientFeatureElements pGradientFeature;
	private PointFeatureElements pPointFeature;
	private SizeFeatureElements pSizeFeature;
	private PositionFeatureElements pPositionFeature;
	private ColorFeatureElements pColorFeature;
	private ColorElements pColor;
	private RGBElements pRGB;
	private IntegerFeatureElements pIntegerFeature;
	private StringFeatureElements pStringFeature;
	private BooleanFeatureElements pBooleanFeature;
	private LineFeatureElements pLineFeature;
	private LineStyleElements pLineStyle;
	private AtributeExpressionElements pAtributeExpression;
	private AtributeValueElements pAtributeValue;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XDiagramGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipselabs.xdiagram.xtext.XDiagram".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//XDiagram:
	//	"metamodel" importURI=STRING imports+=ImportStatement "diagram" modelClass=[ecore::EClass|QualifiedName]
	//	styles+=Style* (nodes+=Node | links+=Link)*;
	public XDiagramElements getXDiagramAccess() {
		return (pXDiagram != null) ? pXDiagram : (pXDiagram = new XDiagramElements());
	}
	
	public ParserRule getXDiagramRule() {
		return getXDiagramAccess().getRule();
	}

	//// importedNamespace apparently cannot be on the root element
	//
	//ImportStatement:
	//	{ImportStatement} ("import" importedNamespace=QualifiedNameWithWildCard)?;
	public ImportStatementElements getImportStatementAccess() {
		return (pImportStatement != null) ? pImportStatement : (pImportStatement = new ImportStatementElements());
	}
	
	public ParserRule getImportStatementRule() {
		return getImportStatementAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildCard returns ecore::EString:
	//	QualifiedName ("." "*")?;
	public QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return (pQualifiedNameWithWildCard != null) ? pQualifiedNameWithWildCard : (pQualifiedNameWithWildCard = new QualifiedNameWithWildCardElements());
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	//Style:
	//	"style" ":" name=ID "{" features=FigureFeatures "}";
	public StyleElements getStyleAccess() {
		return (pStyle != null) ? pStyle : (pStyle = new StyleElements());
	}
	
	public ParserRule getStyleRule() {
		return getStyleAccess().getRule();
	}

	//// TODO: common: text / icon / tooltip
	//
	//DiagramElement:
	//	Node | Link;
	public DiagramElementElements getDiagramElementAccess() {
		return (pDiagramElement != null) ? pDiagramElement : (pDiagramElement = new DiagramElementElements());
	}
	
	public ParserRule getDiagramElementRule() {
		return getDiagramElementAccess().getRule();
	}

	//// resizable default?
	//
	//// TODO validation: unique nodes
	//
	//// notation inheritance?
	//
	//Node:
	//	"node" modelClass=[ecore::EClass|QualifiedName] "{" resizable?="resizable"? ("style" style=ID)? ("icon" icon=ID)?
	//	("name" name=STRING)? attributes+=Attribute* figures+=NodeFigure* containers+=NodeContainer* anchors+=NodeAnchor* "}";
	public NodeElements getNodeAccess() {
		return (pNode != null) ? pNode : (pNode = new NodeElements());
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}

	//// TODO : EMF default value
	//
	//Attribute:
	//	"set" key=ID "=" value=AtributeValue;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//// main? só Figure?
	//
	//NodeFigure:
	//	option="main"? "figure" ":" figure=FigureShape ("," "style" ":" style=ID)? "{" features=FigureFeatures "}";
	public NodeFigureElements getNodeFigureAccess() {
		return (pNodeFigure != null) ? pNodeFigure : (pNodeFigure = new NodeFigureElements());
	}
	
	public ParserRule getNodeFigureRule() {
		return getNodeFigureAccess().getRule();
	}

	//// TODO hstack / vstack (enum?)
	//
	//// TODO validation
	//
	//NodeContainer:
	//	layout=ContainerLayout? "container" ("for" modelReference=[ecore::EReference|QualifiedName])? (":" value=INT
	//	format=("%" | "px"))? "{" figures+=NodeFigure+ "}";
	public NodeContainerElements getNodeContainerAccess() {
		return (pNodeContainer != null) ? pNodeContainer : (pNodeContainer = new NodeContainerElements());
	}
	
	public ParserRule getNodeContainerRule() {
		return getNodeContainerAccess().getRule();
	}

	//enum ContainerLayout:
	//	STACK="stack" | FREE="free";
	public ContainerLayoutElements getContainerLayoutAccess() {
		return (unknownRuleContainerLayout != null) ? unknownRuleContainerLayout : (unknownRuleContainerLayout = new ContainerLayoutElements());
	}
	
	public EnumRule getContainerLayoutRule() {
		return getContainerLayoutAccess().getRule();
	}

	//// TODO: validation - complex requires source e target, complex structure
	//
	//// TODO text / icon
	//
	//Link:
	//	"link" (modelReference=[ecore::EReference|QualifiedName] | complex?="object" modelClass=[ecore::EClass|QualifiedName]
	//	"source" sourceReference=[ecore::EReference|QualifiedName] "target" targetReference=[ecore::EReference|QualifiedName])
	//	"{" manhattan?="manhattan"? ("style" style=ID)? ("icon" icon=ID)? ("name" name=STRING)? (attributes+=Attribute |
	//	linefeatures+=LineFeature | colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature)* //defenido no modelo? [ecore::EReference]
	//
	//	decorators+=Decorator* //    	('origin' '{'			
	//
	//	//			(sourceStatic = StaticFigure)?
	//
	//	//			(sourceDynamic += DynamicFigure)*			
	//
	//	//		'}')?
	//
	//	//		
	//
	//	//		('destiny' '{'			
	//
	//	//			(targetStatic = StaticFigure)?
	//
	//	//			(targetDynamic += DynamicFigure)*			
	//
	//	//		'}')?
	//
	//	"}";
	public LinkElements getLinkAccess() {
		return (pLink != null) ? pLink : (pLink = new LinkElements());
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}

	//// % opcional? ou considerar pixeis?
	//
	//// ter "constantes" para origem destino
	//
	//Decorator:
	//	"decorator" ("at" pos=INT "%" | source?="source" | target?="target" | middle?="middle") "{"
	//	placingStatic=StaticFigure? placingDynamic+=DynamicFigure* "}";
	public DecoratorElements getDecoratorAccess() {
		return (pDecorator != null) ? pDecorator : (pDecorator = new DecoratorElements());
	}
	
	public ParserRule getDecoratorRule() {
		return getDecoratorAccess().getRule();
	}

	//// este text é diferente do figure: Label .... é confuso para quem está a aprender a linguagem   
	//
	//DynamicFigure:
	//	"text" figure=DynamicElement "{" features=FigureFeatures "}";
	public DynamicFigureElements getDynamicFigureAccess() {
		return (pDynamicFigure != null) ? pDynamicFigure : (pDynamicFigure = new DynamicFigureElements());
	}
	
	public ParserRule getDynamicFigureRule() {
		return getDynamicFigureAccess().getRule();
	}

	//DynamicElement:
	//	"Label" | "Description";
	public DynamicElementElements getDynamicElementAccess() {
		return (pDynamicElement != null) ? pDynamicElement : (pDynamicElement = new DynamicElementElements());
	}
	
	public ParserRule getDynamicElementRule() {
		return getDynamicElementAccess().getRule();
	}

	//StaticFigure:
	//	"figure" ":" figure=StaticElement ("," "style" ":" style=ID)? "{" features=FigureFeatures "}";
	public StaticFigureElements getStaticFigureAccess() {
		return (pStaticFigure != null) ? pStaticFigure : (pStaticFigure = new StaticFigureElements());
	}
	
	public ParserRule getStaticFigureRule() {
		return getStaticFigureAccess().getRule();
	}

	//// TODO enum - porque é que esta não é uma figura como as outras?
	//
	//StaticElement:
	//	"Arrow" | "Triangle" | "Rhombus" | "Polygon" | "Polyline";
	public StaticElementElements getStaticElementAccess() {
		return (pStaticElement != null) ? pStaticElement : (pStaticElement = new StaticElementElements());
	}
	
	public ParserRule getStaticElementRule() {
		return getStaticElementAccess().getRule();
	}

	//// TODO: lowercase
	//
	//enum FigureShape:
	//	SQUARE="Square" | RECTANGLE="Rectangle" | ROUNDED_RECTANGLE="RoundedRectangle" | CIRCLE="Circle" | ELLIPSE="Ellipse" |
	//	TRIANGLE="Triangle" | RHOMBUS="Rhombus" | POLYGON="Polygon" | POLYLINE="Polyline" | LABEL="Label" | IMAGE="Image";
	public FigureShapeElements getFigureShapeAccess() {
		return (unknownRuleFigureShape != null) ? unknownRuleFigureShape : (unknownRuleFigureShape = new FigureShapeElements());
	}
	
	public EnumRule getFigureShapeRule() {
		return getFigureShapeAccess().getRule();
	}

	//// TODO: model ids / name Anchor
	//
	//NodeAnchor:
	//	"anchor" ("to" object=ID)? ":" passX="-"? X=INT formatX=("%" | "lf" | "rg") "," passY="-"? Y=INT formatY=("%" | "up" |
	//	"dw") "{" figures+=NodeFigure* arrows+=ArrowAnchor* "}";
	public NodeAnchorElements getNodeAnchorAccess() {
		return (pNodeAnchor != null) ? pNodeAnchor : (pNodeAnchor = new NodeAnchorElements());
	}
	
	public ParserRule getNodeAnchorRule() {
		return getNodeAnchorAccess().getRule();
	}

	//// TODO: model ids - change syntax / name AnchorConstraint -- N connections?
	//
	//ArrowAnchor:
	//	"set" reference=ID "as" type=("incoming" | "outgoing" | "both") "connection" ("using" N=INT "connections")?;
	public ArrowAnchorElements getArrowAnchorAccess() {
		return (pArrowAnchor != null) ? pArrowAnchor : (pArrowAnchor = new ArrowAnchorElements());
	}
	
	public ParserRule getArrowAnchorRule() {
		return getArrowAnchorAccess().getRule();
	}

	//FigureFeatures:
	//	{FigureFeatures} (linefeatures+=LineFeature //	        	(customfeatures += CustomFeature)
	//
	//	| centerfeatures+=CenterFeature | alignfeatures+=AlignFeature | gradientfeatures+=GradientFeature |
	//	pointfeatures+=PointFeature | sizefeatures+=SizeFeature | positionfeatures+=PositionFeature |
	//	colorfeatures+=ColorFeature | integerfeatures+=IntegerFeature | booleanfeatures+=BooleanFeature |
	//	stringfeatures+=StringFeature)*;
	public FigureFeaturesElements getFigureFeaturesAccess() {
		return (pFigureFeatures != null) ? pFigureFeatures : (pFigureFeatures = new FigureFeaturesElements());
	}
	
	public ParserRule getFigureFeaturesRule() {
		return getFigureFeaturesAccess().getRule();
	}

	//StyleFeature:
	//	LayoutFeature | CenterFeature;
	public StyleFeatureElements getStyleFeatureAccess() {
		return (pStyleFeature != null) ? pStyleFeature : (pStyleFeature = new StyleFeatureElements());
	}
	
	public ParserRule getStyleFeatureRule() {
		return getStyleFeatureAccess().getRule();
	}

	//LayoutFeature:
	//	key="layout" ":" value=("horizontal" | "vertical" | "over");
	public LayoutFeatureElements getLayoutFeatureAccess() {
		return (pLayoutFeature != null) ? pLayoutFeature : (pLayoutFeature = new LayoutFeatureElements());
	}
	
	public ParserRule getLayoutFeatureRule() {
		return getLayoutFeatureAccess().getRule();
	}

	//CenterFeature:
	//	key="center" ":" value=("horizontal" | "vertical" | "both");
	public CenterFeatureElements getCenterFeatureAccess() {
		return (pCenterFeature != null) ? pCenterFeature : (pCenterFeature = new CenterFeatureElements());
	}
	
	public ParserRule getCenterFeatureRule() {
		return getCenterFeatureAccess().getRule();
	}

	//AlignFeature:
	//	key="text-align" ":" value=("left" | "middle" | "right");
	public AlignFeatureElements getAlignFeatureAccess() {
		return (pAlignFeature != null) ? pAlignFeature : (pAlignFeature = new AlignFeatureElements());
	}
	
	public ParserRule getAlignFeatureRule() {
		return getAlignFeatureAccess().getRule();
	}

	//// TODO: enum
	//
	//// TODO: custom gradient
	//
	//GradientFeature:
	//	key="gradient" ":" value=("BlueWhite" | "BlueWhiteGloss" | "CopperWhiteGloss" | "LightGray" | "LightYellow" |
	//	"SilverWhiteGloss" | "LimeWhite");
	public GradientFeatureElements getGradientFeatureAccess() {
		return (pGradientFeature != null) ? pGradientFeature : (pGradientFeature = new GradientFeatureElements());
	}
	
	public ParserRule getGradientFeatureRule() {
		return getGradientFeatureAccess().getRule();
	}

	//PointFeature:
	//	"point" ":" X=INT "," Y=INT;
	public PointFeatureElements getPointFeatureAccess() {
		return (pPointFeature != null) ? pPointFeature : (pPointFeature = new PointFeatureElements());
	}
	
	public ParserRule getPointFeatureRule() {
		return getPointFeatureAccess().getRule();
	}

	//SizeFeature:
	//	"size" ":" Width=INT "," Height=INT;
	public SizeFeatureElements getSizeFeatureAccess() {
		return (pSizeFeature != null) ? pSizeFeature : (pSizeFeature = new SizeFeatureElements());
	}
	
	public ParserRule getSizeFeatureRule() {
		return getSizeFeatureAccess().getRule();
	}

	//PositionFeature:
	//	"position" ":" X=INT "," Y=INT;
	public PositionFeatureElements getPositionFeatureAccess() {
		return (pPositionFeature != null) ? pPositionFeature : (pPositionFeature = new PositionFeatureElements());
	}
	
	public ParserRule getPositionFeatureRule() {
		return getPositionFeatureAccess().getRule();
	}

	//ColorFeature:
	//	expression=AtributeExpression? key=("background" | "foreground" | "border") ":" (value=Color | rgb=RGB) ("["
	//	atribute=ID operator=("=" | "<>") option=ID "]")?;
	public ColorFeatureElements getColorFeatureAccess() {
		return (pColorFeature != null) ? pColorFeature : (pColorFeature = new ColorFeatureElements());
	}
	
	public ParserRule getColorFeatureRule() {
		return getColorFeatureAccess().getRule();
	}

	//// TODO enum , já agora 16 standard
	//
	//Color:
	//	"WHITE" | "BLACK" | "BLUE" | "GREEN" | "RED" | "YELLOW" | "CYAN" | "ORANGE";
	public ColorElements getColorAccess() {
		return (pColor != null) ? pColor : (pColor = new ColorElements());
	}
	
	public ParserRule getColorRule() {
		return getColorAccess().getRule();
	}

	//RGB:
	//	"RGB" "(" R=INT "," G=INT "," B=INT ")";
	public RGBElements getRGBAccess() {
		return (pRGB != null) ? pRGB : (pRGB = new RGBElements());
	}
	
	public ParserRule getRGBRule() {
		return getRGBAccess().getRule();
	}

	//IntegerFeature:
	//	expression=AtributeExpression? key=("line-width" | "top" | "left" | "width" | "height" | "angle" | "corner" |
	//	"transparency" | "font-size") ":" value=INT;
	public IntegerFeatureElements getIntegerFeatureAccess() {
		return (pIntegerFeature != null) ? pIntegerFeature : (pIntegerFeature = new IntegerFeatureElements());
	}
	
	public ParserRule getIntegerFeatureRule() {
		return getIntegerFeatureAccess().getRule();
	}

	//StringFeature:
	//	expression=AtributeExpression? key=("text-value" | "font-name" | "icon") ":" (value=STRING | valueL=STRING "+"
	//	attribute=ID | attribute=ID "+" valueR=STRING | attribute=ID | valueL=STRING "+" attribute=ID "+" valueR=STRING)?;
	public StringFeatureElements getStringFeatureAccess() {
		return (pStringFeature != null) ? pStringFeature : (pStringFeature = new StringFeatureElements());
	}
	
	public ParserRule getStringFeatureRule() {
		return getStringFeatureAccess().getRule();
	}

	//BooleanFeature:
	//	expression=AtributeExpression? key=("text-editable" | "font-italic" | "font-bold") ":" value=("true" | "false");
	public BooleanFeatureElements getBooleanFeatureAccess() {
		return (pBooleanFeature != null) ? pBooleanFeature : (pBooleanFeature = new BooleanFeatureElements());
	}
	
	public ParserRule getBooleanFeatureRule() {
		return getBooleanFeatureAccess().getRule();
	}

	//LineFeature:
	//	expression=AtributeExpression? key="line-style" ":" value=LineStyle;
	public LineFeatureElements getLineFeatureAccess() {
		return (pLineFeature != null) ? pLineFeature : (pLineFeature = new LineFeatureElements());
	}
	
	public ParserRule getLineFeatureRule() {
		return getLineFeatureAccess().getRule();
	}

	//// TODO enum  - aspeto do dash/dot/...
	//
	//LineStyle:
	//	"solid" | "dash" | "dot" | "dashdot";
	public LineStyleElements getLineStyleAccess() {
		return (pLineStyle != null) ? pLineStyle : (pLineStyle = new LineStyleElements());
	}
	
	public ParserRule getLineStyleRule() {
		return getLineStyleAccess().getRule();
	}

	//// rename? ConditionalExpression?
	//
	//// TODO: key modelReference ecore::EAttribute
	//
	//AtributeExpression:
	//	key=ID operator=("=" | "<>") value=AtributeValue "->";
	public AtributeExpressionElements getAtributeExpressionAccess() {
		return (pAtributeExpression != null) ? pAtributeExpression : (pAtributeExpression = new AtributeExpressionElements());
	}
	
	public ParserRule getAtributeExpressionRule() {
		return getAtributeExpressionAccess().getRule();
	}

	//// future
	//
	////AttributeReference:
	//
	////	modelAttribute=[ecore::EAttribute|QualifiedName] ('/' path+=AttributeReference)*
	//
	////;
	//
	//AtributeValue:
	//	valueINT=INT | valueINT=INT "." valueDEC=INT | valueID=ID | valueBOOL=("true" | "false") | valueSTRING=STRING |
	//	valueDAY=INT "-" valueMONTH=INT "-" valueYEAR=INT;
	public AtributeValueElements getAtributeValueAccess() {
		return (pAtributeValue != null) ? pAtributeValue : (pAtributeValue = new AtributeValueElements());
	}
	
	public ParserRule getAtributeValueRule() {
		return getAtributeValueAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
