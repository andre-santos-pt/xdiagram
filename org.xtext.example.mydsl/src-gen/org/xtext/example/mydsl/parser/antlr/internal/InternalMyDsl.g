/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getColorsCustomColorParserRuleCall_0_0()); 
	    }
		lv_colors_0_0=ruleCustomColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"colors",
        		lv_colors_0_0, 
        		"CustomColor");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImagesImageFileParserRuleCall_1_0()); 
	    }
		lv_images_1_0=ruleImageFile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"images",
        		lv_images_1_0, 
        		"ImageFile");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsConnectableElementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleConnectableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"ConnectableElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getLinksLinkElementParserRuleCall_3_0()); 
	    }
		lv_links_3_0=ruleLinkElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"links",
        		lv_links_3_0, 
        		"LinkElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleConnectableElement
entryRuleConnectableElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectableElementRule()); }
	 iv_ruleConnectableElement=ruleConnectableElement 
	 { $current=$iv_ruleConnectableElement.current; } 
	 EOF 
;

// Rule ConnectableElement
ruleConnectableElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getRectangleParserRuleCall_0()); 
    }
    this_Rectangle_0=ruleRectangle
    { 
        $current = $this_Rectangle_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getRhombusParserRuleCall_1()); 
    }
    this_Rhombus_1=ruleRhombus
    { 
        $current = $this_Rhombus_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getEllipseParserRuleCall_2()); 
    }
    this_Ellipse_2=ruleEllipse
    { 
        $current = $this_Ellipse_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getPolygonParserRuleCall_3()); 
    }
    this_Polygon_3=rulePolygon
    { 
        $current = $this_Polygon_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getLabelParserRuleCall_4()); 
    }
    this_Label_4=ruleLabel
    { 
        $current = $this_Label_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getImageParserRuleCall_5()); 
    }
    this_Image_5=ruleImage
    { 
        $current = $this_Image_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRGB
entryRuleRGB returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRGBRule()); }
	 iv_ruleRGB=ruleRGB 
	 { $current=$iv_ruleRGB.current; } 
	 EOF 
;

// Rule RGB
ruleRGB returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_R_0_0=RULE_INT
		{
			newLeafNode(lv_R_0_0, grammarAccess.getRGBAccess().getRINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRGBRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"R",
        		lv_R_0_0, 
        		"INT");
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRGBAccess().getCommaKeyword_1());
    }
(
(
		lv_G_2_0=RULE_INT
		{
			newLeafNode(lv_G_2_0, grammarAccess.getRGBAccess().getGINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRGBRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"G",
        		lv_G_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRGBAccess().getCommaKeyword_3());
    }
(
(
		lv_B_4_0=RULE_INT
		{
			newLeafNode(lv_B_4_0, grammarAccess.getRGBAccess().getBINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRGBRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"B",
        		lv_B_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleImageFile
entryRuleImageFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageFileRule()); }
	 iv_ruleImageFile=ruleImageFile 
	 { $current=$iv_ruleImageFile.current; } 
	 EOF 
;

// Rule ImageFile
ruleImageFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='image' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageFileAccess().getImageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getImageFileAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_src_2_0=RULE_STRING
		{
			newLeafNode(lv_src_2_0, grammarAccess.getImageFileAccess().getSrcSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"src",
        		lv_src_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	 iv_ruleColor=ruleColor 
	 { $current=$iv_ruleColor.current; } 
	 EOF 
;

// Rule Color
ruleColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_custom_0_0=	'rgb=' 
    {
        newLeafNode(lv_custom_0_0, grammarAccess.getColorAccess().getCustomRgbKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorRule());
	        }
       		setWithLastConsumed($current, "custom", true, "rgb=");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getColorAccess().getRgbCustomColorCrossReference_0_1_0()); 
	}

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getColorAccess().getDefaultDefaultColorEnumRuleCall_1_0()); 
	    }
		lv_default_2_0=ruleDefaultColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_2_0, 
        		"DefaultColor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCustomColor
entryRuleCustomColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomColorRule()); }
	 iv_ruleCustomColor=ruleCustomColor 
	 { $current=$iv_ruleCustomColor.current; } 
	 EOF 
;

// Rule CustomColor
ruleCustomColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='color' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomColorAccess().getColorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomColorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomColorAccess().getRgbRGBParserRuleCall_2_0()); 
	    }
		lv_rgb_2_0=ruleRGB		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomColorRule());
	        }
       		set(
       			$current, 
       			"rgb",
        		lv_rgb_2_0, 
        		"RGB");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRectangle
entryRuleRectangle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRectangleRule()); }
	 iv_ruleRectangle=ruleRectangle 
	 { $current=$iv_ruleRectangle.current; } 
	 EOF 
;

// Rule Rectangle
ruleRectangle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_rectangle_0_0=	'rectangle' 
    {
        newLeafNode(lv_rectangle_0_0, grammarAccess.getRectangleAccess().getRectangleRectangleKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
       		setWithLastConsumed($current, "rectangle", true, "rectangle");
	    }

)
)
    |(
(
		lv_square_1_0=	'square' 
    {
        newLeafNode(lv_square_1_0, grammarAccess.getRectangleAccess().getSquareSquareKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
       		setWithLastConsumed($current, "square", true, "square");
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRectangleAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getFeaturesPolygonFeatureParserRuleCall_2_0()); 
	    }
		lv_features_3_0=rulePolygonFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"PolygonFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRectangleAccess().getRightCurlyBracketKeyword_3());
    }
)
;







// Entry rule entryRuleRhombus
entryRuleRhombus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRhombusRule()); }
	 iv_ruleRhombus=ruleRhombus 
	 { $current=$iv_ruleRhombus.current; } 
	 EOF 
;

// Rule Rhombus
ruleRhombus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rhombus' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRhombusAccess().getRhombusKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRhombusAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRhombusAccess().getFeaturesPolygonFeatureParserRuleCall_2_0()); 
	    }
		lv_features_2_0=rulePolygonFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRhombusRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_2_0, 
        		"PolygonFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRhombusAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleEllipse
entryRuleEllipse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEllipseRule()); }
	 iv_ruleEllipse=ruleEllipse 
	 { $current=$iv_ruleEllipse.current; } 
	 EOF 
;

// Rule Ellipse
ruleEllipse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_ellipse_0_0=	'ellipse' 
    {
        newLeafNode(lv_ellipse_0_0, grammarAccess.getEllipseAccess().getEllipseEllipseKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
       		setWithLastConsumed($current, "ellipse", true, "ellipse");
	    }

)
)
    |(
(
		lv_circle_1_0=	'circle' 
    {
        newLeafNode(lv_circle_1_0, grammarAccess.getEllipseAccess().getCircleCircleKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
       		setWithLastConsumed($current, "circle", true, "circle");
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEllipseAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getFeaturesPolygonFeatureParserRuleCall_2_0()); 
	    }
		lv_features_3_0=rulePolygonFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"PolygonFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEllipseAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePolygon
entryRulePolygon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolygonRule()); }
	 iv_rulePolygon=rulePolygon 
	 { $current=$iv_rulePolygon.current; } 
	 EOF 
;

// Rule Polygon
rulePolygon returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_polygon_0_0=	'polygon' 
    {
        newLeafNode(lv_polygon_0_0, grammarAccess.getPolygonAccess().getPolygonPolygonKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolygonRule());
	        }
       		setWithLastConsumed($current, "polygon", true, "polygon");
	    }

)
)
    |(
(
		lv_polyline_1_0=	'polyline' 
    {
        newLeafNode(lv_polyline_1_0, grammarAccess.getPolygonAccess().getPolylinePolylineKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolygonRule());
	        }
       		setWithLastConsumed($current, "polyline", true, "polyline");
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPolygonAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getFeaturesPointParserRuleCall_2_0()); 
	    }
		lv_features_3_0=rulePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"Point");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getFeaturesPointParserRuleCall_3_0()); 
	    }
		lv_features_4_0=rulePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_4_0, 
        		"Point");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getFeaturesPolygonFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=rulePolygonFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"PolygonFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPolygonAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePolygonFeature
entryRulePolygonFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolygonFeatureRule()); }
	 iv_rulePolygonFeature=rulePolygonFeature 
	 { $current=$iv_rulePolygonFeature.current; } 
	 EOF 
;

// Rule PolygonFeature
rulePolygonFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPolygonFeatureAccess().getPositionParserRuleCall_0()); 
    }
    this_Position_0=rulePosition
    { 
        $current = $this_Position_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPolygonFeatureAccess().getSizeParserRuleCall_1()); 
    }
    this_Size_1=ruleSize
    { 
        $current = $this_Size_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPolygonFeatureAccess().getColorFeatureParserRuleCall_2()); 
    }
    this_ColorFeature_2=ruleColorFeature
    { 
        $current = $this_ColorFeature_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPolygonFeatureAccess().getLineStyleParserRuleCall_3()); 
    }
    this_LineStyle_3=ruleLineStyle
    { 
        $current = $this_LineStyle_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPolygonFeatureAccess().getLineWidthParserRuleCall_4()); 
    }
    this_LineWidth_4=ruleLineWidth
    { 
        $current = $this_LineWidth_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAtributeExpression
entryRuleAtributeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtributeExpressionRule()); }
	 iv_ruleAtributeExpression=ruleAtributeExpression 
	 { $current=$iv_ruleAtributeExpression.current; } 
	 EOF 
;

// Rule AtributeExpression
ruleAtributeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAtributeExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		lv_key_1_0=RULE_ID
		{
			newLeafNode(lv_key_1_0, grammarAccess.getAtributeExpressionAccess().getKeyIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_1_0, 
        		"ID");
	    }

)
)(
(
(
		lv_operator_2_1=	'=' 
    {
        newLeafNode(lv_operator_2_1, grammarAccess.getAtributeExpressionAccess().getOperatorEqualsSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_1, null);
	    }

    |		lv_operator_2_2=	'<>' 
    {
        newLeafNode(lv_operator_2_2, grammarAccess.getAtributeExpressionAccess().getOperatorLessThanSignGreaterThanSignKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtributeExpressionAccess().getValueAtributeValueParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleAtributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtributeExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"AtributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAtributeExpressionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAtributeExpressionAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleAtributeValue
entryRuleAtributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtributeValueRule()); }
	 iv_ruleAtributeValue=ruleAtributeValue 
	 { $current=$iv_ruleAtributeValue.current; } 
	 EOF 
;

// Rule AtributeValue
ruleAtributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_valueINT_0_0=RULE_INT
		{
			newLeafNode(lv_valueINT_0_0, grammarAccess.getAtributeValueAccess().getValueINTINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueINT",
        		lv_valueINT_0_0, 
        		"INT");
	    }

)
)
    |((
(
		lv_valueINT_1_0=RULE_INT
		{
			newLeafNode(lv_valueINT_1_0, grammarAccess.getAtributeValueAccess().getValueINTINTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueINT",
        		lv_valueINT_1_0, 
        		"INT");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAtributeValueAccess().getFullStopKeyword_1_1());
    }
(
(
		lv_valueDEC_3_0=RULE_INT
		{
			newLeafNode(lv_valueDEC_3_0, grammarAccess.getAtributeValueAccess().getValueDECINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueDEC",
        		lv_valueDEC_3_0, 
        		"INT");
	    }

)
))
    |(
(
		lv_valueID_4_0=RULE_ID
		{
			newLeafNode(lv_valueID_4_0, grammarAccess.getAtributeValueAccess().getValueIDIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueID",
        		lv_valueID_4_0, 
        		"ID");
	    }

)
)
    |(
(
(
		lv_valueBOOL_5_1=	'true' 
    {
        newLeafNode(lv_valueBOOL_5_1, grammarAccess.getAtributeValueAccess().getValueBOOLTrueKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed($current, "valueBOOL", lv_valueBOOL_5_1, null);
	    }

    |		lv_valueBOOL_5_2=	'false' 
    {
        newLeafNode(lv_valueBOOL_5_2, grammarAccess.getAtributeValueAccess().getValueBOOLFalseKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed($current, "valueBOOL", lv_valueBOOL_5_2, null);
	    }

)

)
)
    |(
(
		lv_valueSTRING_6_0=RULE_STRING
		{
			newLeafNode(lv_valueSTRING_6_0, grammarAccess.getAtributeValueAccess().getValueSTRINGSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueSTRING",
        		lv_valueSTRING_6_0, 
        		"STRING");
	    }

)
)
    |((
(
		lv_valueDAY_7_0=RULE_INT
		{
			newLeafNode(lv_valueDAY_7_0, grammarAccess.getAtributeValueAccess().getValueDAYINTTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueDAY",
        		lv_valueDAY_7_0, 
        		"INT");
	    }

)
)	otherlv_8='-' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAtributeValueAccess().getHyphenMinusKeyword_5_1());
    }
(
(
		lv_valueMONTH_9_0=RULE_INT
		{
			newLeafNode(lv_valueMONTH_9_0, grammarAccess.getAtributeValueAccess().getValueMONTHINTTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueMONTH",
        		lv_valueMONTH_9_0, 
        		"INT");
	    }

)
)	otherlv_10='-' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAtributeValueAccess().getHyphenMinusKeyword_5_3());
    }
(
(
		lv_valueYEAR_11_0=RULE_INT
		{
			newLeafNode(lv_valueYEAR_11_0, grammarAccess.getAtributeValueAccess().getValueYEARINTTerminalRuleCall_5_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueYEAR",
        		lv_valueYEAR_11_0, 
        		"INT");
	    }

)
)))
;









// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	 iv_ruleLabel=ruleLabel 
	 { $current=$iv_ruleLabel.current; } 
	 EOF 
;

// Rule Label
ruleLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabelAccess().getLabelAction_0(),
            $current);
    }
)	otherlv_1='label' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getLabelKeyword_1());
    }
(
(
		lv_editable_2_0=	'editable' 
    {
        newLeafNode(lv_editable_2_0, grammarAccess.getLabelAccess().getEditableEditableKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed($current, "editable", true, "editable");
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLabelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelAccess().getFeaturesLabelFeatureParserRuleCall_4_0()); 
	    }
		lv_features_4_0=ruleLabelFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_4_0, 
        		"LabelFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLabelAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLabelFeature
entryRuleLabelFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelFeatureRule()); }
	 iv_ruleLabelFeature=ruleLabelFeature 
	 { $current=$iv_ruleLabelFeature.current; } 
	 EOF 
;

// Rule LabelFeature
ruleLabelFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getForegroundParserRuleCall_0()); 
    }
    this_Foreground_0=ruleForeground
    { 
        $current = $this_Foreground_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getBackgroundParserRuleCall_1()); 
    }
    this_Background_1=ruleBackground
    { 
        $current = $this_Background_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontFaceParserRuleCall_2()); 
    }
    this_FontFace_2=ruleFontFace
    { 
        $current = $this_FontFace_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontSizeParserRuleCall_3()); 
    }
    this_FontSize_3=ruleFontSize
    { 
        $current = $this_FontSize_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontStyleParserRuleCall_4()); 
    }
    this_FontStyle_4=ruleFontStyle
    { 
        $current = $this_FontStyle_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	 iv_ruleImage=ruleImage 
	 { $current=$iv_ruleImage.current; } 
	 EOF 
;

// Rule Image
ruleImage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='image' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getImageAccess().getImageImageFileCrossReference_1_0()); 
	}

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImageAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getFeaturesImageFeatureParserRuleCall_3_0()); 
	    }
		lv_features_3_0=ruleImageFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"ImageFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImageAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleImageFeature
entryRuleImageFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageFeatureRule()); }
	 iv_ruleImageFeature=ruleImageFeature 
	 { $current=$iv_ruleImageFeature.current; } 
	 EOF 
;

// Rule ImageFeature
ruleImageFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getSizeParserRuleCall_0()); 
    }
    this_Size_0=ruleSize
    { 
        $current = $this_Size_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getPositionParserRuleCall_1()); 
    }
    this_Position_1=rulePosition
    { 
        $current = $this_Position_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getTransparencyParserRuleCall_2()); 
    }
    this_Transparency_2=ruleTransparency
    { 
        $current = $this_Transparency_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLinkElement
entryRuleLinkElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkElementRule()); }
	 iv_ruleLinkElement=ruleLinkElement 
	 { $current=$iv_ruleLinkElement.current; } 
	 EOF 
;

// Rule LinkElement
ruleLinkElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkElementAccess().getLineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkElementAccess().getLineTypeLineTypeEnumRuleCall_1_0()); 
	    }
		lv_lineType_1_0=ruleLineType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkElementRule());
	        }
       		set(
       			$current, 
       			"lineType",
        		lv_lineType_1_0, 
        		"LineType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkElementAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkElementAccess().getFeaturesLinkFeatureParserRuleCall_3_0()); 
	    }
		lv_features_3_0=ruleLinkFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkElementRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"LinkFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinkElementAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleLinkFeature
entryRuleLinkFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkFeatureRule()); }
	 iv_ruleLinkFeature=ruleLinkFeature 
	 { $current=$iv_ruleLinkFeature.current; } 
	 EOF 
;

// Rule LinkFeature
ruleLinkFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getForegroundParserRuleCall_0()); 
    }
    this_Foreground_0=ruleForeground
    { 
        $current = $this_Foreground_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getLineStyleParserRuleCall_1()); 
    }
    this_LineStyle_1=ruleLineStyle
    { 
        $current = $this_LineStyle_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getLineWidthParserRuleCall_2()); 
    }
    this_LineWidth_2=ruleLineWidth
    { 
        $current = $this_LineWidth_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColorFeature
entryRuleColorFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorFeatureRule()); }
	 iv_ruleColorFeature=ruleColorFeature 
	 { $current=$iv_ruleColorFeature.current; } 
	 EOF 
;

// Rule ColorFeature
ruleColorFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getColorFeatureAccess().getForegroundParserRuleCall_0()); 
    }
    this_Foreground_0=ruleForeground
    { 
        $current = $this_Foreground_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getColorFeatureAccess().getBackgroundParserRuleCall_1()); 
    }
    this_Background_1=ruleBackground
    { 
        $current = $this_Background_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getColorFeatureAccess().getBorderParserRuleCall_2()); 
    }
    this_Border_2=ruleBorder
    { 
        $current = $this_Border_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleForeground
entryRuleForeground returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForegroundRule()); }
	 iv_ruleForeground=ruleForeground 
	 { $current=$iv_ruleForeground.current; } 
	 EOF 
;

// Rule Foreground
ruleForeground returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='foreground' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForegroundAccess().getForegroundKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForegroundAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForegroundAccess().getColorColorParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForegroundRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBackground
entryRuleBackground returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundRule()); }
	 iv_ruleBackground=ruleBackground 
	 { $current=$iv_ruleBackground.current; } 
	 EOF 
;

// Rule Background
ruleBackground returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='background' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBackgroundAccess().getBackgroundKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundAccess().getColorColorParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBorder
entryRuleBorder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorderRule()); }
	 iv_ruleBorder=ruleBorder 
	 { $current=$iv_ruleBorder.current; } 
	 EOF 
;

// Rule Border
ruleBorder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='border' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBorderAccess().getBorderKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBorderAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderAccess().getColorColorParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTransparency
entryRuleTransparency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransparencyRule()); }
	 iv_ruleTransparency=ruleTransparency 
	 { $current=$iv_ruleTransparency.current; } 
	 EOF 
;

// Rule Transparency
ruleTransparency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transparency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransparencyAccess().getTransparencyKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransparencyAccess().getColonKeyword_1());
    }
(
(
		lv_percent_2_0=RULE_PERCENT
		{
			newLeafNode(lv_percent_2_0, grammarAccess.getTransparencyAccess().getPercentPERCENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransparencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"percent",
        		lv_percent_2_0, 
        		"PERCENT");
	    }

)
))
;





// Entry rule entryRuleSize
entryRuleSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	 iv_ruleSize=ruleSize 
	 { $current=$iv_ruleSize.current; } 
	 EOF 
;

// Rule Size
ruleSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSizeAccess().getSizeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSizeAccess().getColonKeyword_1());
    }
(
(
		lv_width_2_0=RULE_INT
		{
			newLeafNode(lv_width_2_0, grammarAccess.getSizeAccess().getWidthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSizeAccess().getCommaKeyword_3());
    }
(
(
		lv_height_4_0=RULE_INT
		{
			newLeafNode(lv_height_4_0, grammarAccess.getSizeAccess().getHeightINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	 iv_rulePoint=rulePoint 
	 { $current=$iv_rulePoint.current; } 
	 EOF 
;

// Rule Point
rulePoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='point' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPointAccess().getPointKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPointAccess().getColonKeyword_1());
    }
(
(
		lv_x_2_0=RULE_INT
		{
			newLeafNode(lv_x_2_0, grammarAccess.getPointAccess().getXINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPointAccess().getCommaKeyword_3());
    }
(
(
		lv_y_4_0=RULE_INT
		{
			newLeafNode(lv_y_4_0, grammarAccess.getPointAccess().getYINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	 iv_rulePosition=rulePosition 
	 { $current=$iv_rulePosition.current; } 
	 EOF 
;

// Rule Position
rulePosition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='position' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPositionAccess().getPositionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPositionAccess().getColonKeyword_1());
    }
(
(
		lv_x_2_0=RULE_INT
		{
			newLeafNode(lv_x_2_0, grammarAccess.getPositionAccess().getXINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPositionAccess().getCommaKeyword_3());
    }
(
(
		lv_y_4_0=RULE_INT
		{
			newLeafNode(lv_y_4_0, grammarAccess.getPositionAccess().getYINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleCorner
entryRuleCorner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCornerRule()); }
	 iv_ruleCorner=ruleCorner 
	 { $current=$iv_ruleCorner.current; } 
	 EOF 
;

// Rule Corner
ruleCorner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='corner' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCornerAccess().getCornerKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCornerAccess().getColonKeyword_1());
    }
(
(
		lv_angle_2_0=RULE_INT
		{
			newLeafNode(lv_angle_2_0, grammarAccess.getCornerAccess().getAngleINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCornerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"angle",
        		lv_angle_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleFontFace
entryRuleFontFace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontFaceRule()); }
	 iv_ruleFontFace=ruleFontFace 
	 { $current=$iv_ruleFontFace.current; } 
	 EOF 
;

// Rule FontFace
ruleFontFace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-face' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontFaceAccess().getFontFaceKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontFaceAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontFaceAccess().getFaceFontFaceTypeEnumRuleCall_2_0()); 
	    }
		lv_face_2_0=ruleFontFaceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontFaceRule());
	        }
       		set(
       			$current, 
       			"face",
        		lv_face_2_0, 
        		"FontFaceType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFontSize
entryRuleFontSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontSizeRule()); }
	 iv_ruleFontSize=ruleFontSize 
	 { $current=$iv_ruleFontSize.current; } 
	 EOF 
;

// Rule FontSize
ruleFontSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontSizeAccess().getFontSizeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontSizeAccess().getColonKeyword_1());
    }
(
(
		lv_size_2_0=RULE_INT
		{
			newLeafNode(lv_size_2_0, grammarAccess.getFontSizeAccess().getSizeINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleFontStyle
entryRuleFontStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontStyleRule()); }
	 iv_ruleFontStyle=ruleFontStyle 
	 { $current=$iv_ruleFontStyle.current; } 
	 EOF 
;

// Rule FontStyle
ruleFontStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontStyleAccess().getFontStyleKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontStyleAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontStyleAccess().getStylesFontStyleTypeEnumRuleCall_2_0()); 
	    }
		lv_styles_2_0=ruleFontStyleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontStyleRule());
	        }
       		add(
       			$current, 
       			"styles",
        		lv_styles_2_0, 
        		"FontStyleType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFontStyleAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontStyleAccess().getStylesFontStyleTypeEnumRuleCall_3_1_0()); 
	    }
		lv_styles_4_0=ruleFontStyleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontStyleRule());
	        }
       		add(
       			$current, 
       			"styles",
        		lv_styles_4_0, 
        		"FontStyleType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLineStyle
entryRuleLineStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineStyleRule()); }
	 iv_ruleLineStyle=ruleLineStyle 
	 { $current=$iv_ruleLineStyle.current; } 
	 EOF 
;

// Rule LineStyle
ruleLineStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line-style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineStyleAccess().getLineStyleKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLineStyleAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineStyleAccess().getStyleLineTypeEnumRuleCall_2_0()); 
	    }
		lv_style_2_0=ruleLineType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineStyleRule());
	        }
       		set(
       			$current, 
       			"style",
        		lv_style_2_0, 
        		"LineType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLineWidth
entryRuleLineWidth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineWidthRule()); }
	 iv_ruleLineWidth=ruleLineWidth 
	 { $current=$iv_ruleLineWidth.current; } 
	 EOF 
;

// Rule LineWidth
ruleLineWidth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line-width' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineWidthAccess().getLineWidthKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLineWidthAccess().getColonKeyword_1());
    }
(
(
		lv_width_2_0=RULE_INT
		{
			newLeafNode(lv_width_2_0, grammarAccess.getLineWidthAccess().getWidthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineWidthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_2_0, 
        		"INT");
	    }

)
))
;





// Rule DefaultColor
ruleDefaultColor returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='red' 
	{
        $current = grammarAccess.getDefaultColorAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDefaultColorAccess().getREDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='blue' 
	{
        $current = grammarAccess.getDefaultColorAccess().getBLUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDefaultColorAccess().getBLUEEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='yellow' 
	{
        $current = grammarAccess.getDefaultColorAccess().getYELLOWEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDefaultColorAccess().getYELLOWEnumLiteralDeclaration_2()); 
    }
));



// Rule FontFaceType
ruleFontFaceType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='arial' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getARIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFontFaceTypeAccess().getARIALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='verdana' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getVERDANAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFontFaceTypeAccess().getVERDANAEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='times' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getTIMESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFontFaceTypeAccess().getTIMESEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='courier' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getCOURIEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getFontFaceTypeAccess().getCOURIEREnumLiteralDeclaration_3()); 
    }
));



// Rule FontStyleType
ruleFontStyleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='italics' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getITALICSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFontStyleTypeAccess().getITALICSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='bold' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getBOLDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFontStyleTypeAccess().getBOLDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='underline' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getUNDERLINEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFontStyleTypeAccess().getUNDERLINEEnumLiteralDeclaration_2()); 
    }
));



// Rule LineType
ruleLineType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='solid' 
	{
        $current = grammarAccess.getLineTypeAccess().getSOLIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLineTypeAccess().getSOLIDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='dash' 
	{
        $current = grammarAccess.getLineTypeAccess().getDASHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLineTypeAccess().getDASHEnumLiteralDeclaration_1()); 
    }
));



RULE_PERCENT : ('0'|'1'..'9' ('0'..'9')?|'100') '%';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


