/*
* generated by Xtext
*/
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipselabs.xdiagram.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipselabs.xdiagram.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipselabs.xdiagram.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;
 	
    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "XDiagram";	
   	}
   	
   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleXDiagram
entryRuleXDiagram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDiagramRule()); }
	 iv_ruleXDiagram=ruleXDiagram 
	 { $current=$iv_ruleXDiagram.current; } 
	 EOF 
;

// Rule XDiagram
ruleXDiagram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='metamodel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXDiagramAccess().getMetamodelKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getXDiagramAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getImportsImportStatementParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImportStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"ImportStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getDiagramDiagramParserRuleCall_3_0()); 
	    }
		lv_diagram_3_0=ruleDiagram		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		set(
       			$current, 
       			"diagram",
        		lv_diagram_3_0, 
        		"Diagram");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getGroupsGroupParserRuleCall_4_0()); 
	    }
		lv_groups_4_0=ruleGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"groups",
        		lv_groups_4_0, 
        		"Group");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getElementsDiagramElementParserRuleCall_5_0_0()); 
	    }
		lv_elements_5_0=ruleDiagramElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"DiagramElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getStylesStyleParserRuleCall_5_1_0()); 
	    }
		lv_styles_6_0=ruleStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"styles",
        		lv_styles_6_0, 
        		"Style");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getColorsCustomColorParserRuleCall_5_2_0()); 
	    }
		lv_colors_7_0=ruleCustomColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"colors",
        		lv_colors_7_0, 
        		"CustomColor");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXDiagramAccess().getFiguresCustomFigureParserRuleCall_5_3_0()); 
	    }
		lv_figures_8_0=ruleCustomFigure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDiagramRule());
	        }
       		add(
       			$current, 
       			"figures",
        		lv_figures_8_0, 
        		"CustomFigure");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getImportStatementAccess().getImportStatementAction_0(),
            $current);
    }
)(	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportStatementAccess().getImportKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportStatementAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_1_0()); 
	    }
		lv_importedNamespace_2_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportStatementRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_2_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleDiagram
entryRuleDiagram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiagramRule()); }
	 iv_ruleDiagram=ruleDiagram 
	 { $current=$iv_ruleDiagram.current; } 
	 EOF 
;

// Rule Diagram
ruleDiagram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='diagram' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDiagramAccess().getDiagramKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDiagramRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDiagramAccess().getModelClassEClassCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDiagramAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDiagramAccess().getContainsContainsParserRuleCall_3_0()); 
	    }
		lv_contains_3_0=ruleContains		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDiagramRule());
	        }
       		add(
       			$current, 
       			"contains",
        		lv_contains_3_0, 
        		"Contains");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDiagramAccess().getFiguresConnectableElementParserRuleCall_4_0()); 
	    }
		lv_figures_4_0=ruleConnectableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDiagramRule());
	        }
       		add(
       			$current, 
       			"figures",
        		lv_figures_4_0, 
        		"ConnectableElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDiagramAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	 iv_ruleGroup=ruleGroup 
	 { $current=$iv_ruleGroup.current; } 
	 EOF 
;

// Rule Group
ruleGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='group' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDiagramElement
entryRuleDiagramElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiagramElementRule()); }
	 iv_ruleDiagramElement=ruleDiagramElement 
	 { $current=$iv_ruleDiagramElement.current; } 
	 EOF 
;

// Rule DiagramElement
ruleDiagramElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDiagramElementAccess().getNodeParserRuleCall_0()); 
    }
    this_Node_0=ruleNode
    { 
        $current = $this_Node_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDiagramElementAccess().getLinkParserRuleCall_1()); 
    }
    this_Link_1=ruleLink
    { 
        $current = $this_Link_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	 iv_ruleStyle=ruleStyle 
	 { $current=$iv_ruleStyle.current; } 
	 EOF 
;

// Rule Style
ruleStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStyleAccess().getStyleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStyleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((
(
		lv_styled_2_0=	'extends' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getStyleAccess().getStyledExtendsKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleRule());
	        }
       		setWithLastConsumed($current, "styled", true, "extends");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getStyleAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStyleAccess().getFeaturesStyleFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleStyleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStyleRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"StyleFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleLinkedFeature
entryRuleLinkedFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkedFeatureRule()); }
	 iv_ruleLinkedFeature=ruleLinkedFeature 
	 { $current=$iv_ruleLinkedFeature.current; } 
	 EOF 
;

// Rule LinkedFeature
ruleLinkedFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLinkedFeatureAccess().getContainsParserRuleCall_0()); 
    }
    this_Contains_0=ruleContains
    { 
        $current = $this_Contains_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkedFeatureAccess().getAnchorParserRuleCall_1()); 
    }
    this_Anchor_1=ruleAnchor
    { 
        $current = $this_Anchor_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStyleFeature
entryRuleStyleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStyleFeatureRule()); }
	 iv_ruleStyleFeature=ruleStyleFeature 
	 { $current=$iv_ruleStyleFeature.current; } 
	 EOF 
;

// Rule StyleFeature
ruleStyleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getSizeParserRuleCall_0()); 
    }
    this_Size_0=ruleSize
    { 
        $current = $this_Size_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getPositionParserRuleCall_1()); 
    }
    this_Position_1=rulePosition
    { 
        $current = $this_Position_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getPointParserRuleCall_2()); 
    }
    this_Point_2=rulePoint
    { 
        $current = $this_Point_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getCornerParserRuleCall_3()); 
    }
    this_Corner_3=ruleCorner
    { 
        $current = $this_Corner_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getBackgroundParserRuleCall_4()); 
    }
    this_Background_4=ruleBackground
    { 
        $current = $this_Background_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getForegroundParserRuleCall_5()); 
    }
    this_Foreground_5=ruleForeground
    { 
        $current = $this_Foreground_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getTransparencyParserRuleCall_6()); 
    }
    this_Transparency_6=ruleTransparency
    { 
        $current = $this_Transparency_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getFontFaceParserRuleCall_7()); 
    }
    this_FontFace_7=ruleFontFace
    { 
        $current = $this_FontFace_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getFontSizeParserRuleCall_8()); 
    }
    this_FontSize_8=ruleFontSize
    { 
        $current = $this_FontSize_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getFontStyleParserRuleCall_9()); 
    }
    this_FontStyle_9=ruleFontStyle
    { 
        $current = $this_FontStyle_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getTextValueParserRuleCall_10()); 
    }
    this_TextValue_10=ruleTextValue
    { 
        $current = $this_TextValue_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getLineStyleParserRuleCall_11()); 
    }
    this_LineStyle_11=ruleLineStyle
    { 
        $current = $this_LineStyle_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStyleFeatureAccess().getLineWidthParserRuleCall_12()); 
    }
    this_LineWidth_12=ruleLineWidth
    { 
        $current = $this_LineWidth_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleChildElement
entryRuleChildElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChildElementRule()); }
	 iv_ruleChildElement=ruleChildElement 
	 { $current=$iv_ruleChildElement.current; } 
	 EOF 
;

// Rule ChildElement
ruleChildElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getChildElementAccess().getConnectableElementParserRuleCall_0()); 
    }
    this_ConnectableElement_0=ruleConnectableElement
    { 
        $current = $this_ConnectableElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChildElementAccess().getLineParserRuleCall_1()); 
    }
    this_Line_1=ruleLine
    { 
        $current = $this_Line_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChildElementAccess().getArrowParserRuleCall_2()); 
    }
    this_Arrow_2=ruleArrow
    { 
        $current = $this_Arrow_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFeatureConditional
entryRuleFeatureConditional returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureConditionalRule()); }
	 iv_ruleFeatureConditional=ruleFeatureConditional 
	 { $current=$iv_ruleFeatureConditional.current; } 
	 EOF 
;

// Rule FeatureConditional
ruleFeatureConditional returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureConditionalAccess().getIfKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureConditionalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFeatureConditionalAccess().getModelAttributeEAttributeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureConditionalAccess().getOperatorOperatorEnumRuleCall_2_0()); 
	    }
		lv_operator_2_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureConditionalRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureConditionalAccess().getValueValueParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureConditionalRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	 iv_ruleNode=ruleNode 
	 { $current=$iv_ruleNode.current; } 
	 EOF 
;

// Rule Node
ruleNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='node' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNodeAccess().getModelClassEClassCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='toolname' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getToolnameKeyword_3_0());
    }
(
(
		lv_toolName_4_0=RULE_STRING
		{
			newLeafNode(lv_toolName_4_0, grammarAccess.getNodeAccess().getToolNameSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"toolName",
        		lv_toolName_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNodeAccess().getColonKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getNodeAccess().getGroupGroupCrossReference_3_2_1_0()); 
	}

)
))?)?(	otherlv_7='icon' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNodeAccess().getIconKeyword_4_0());
    }
(
(
		lv_imageId_8_0=RULE_ID
		{
			newLeafNode(lv_imageId_8_0, grammarAccess.getNodeAccess().getImageIdIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"imageId",
        		lv_imageId_8_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeAccess().getRootFigureConnectableElementParserRuleCall_5_0()); 
	    }
		lv_rootFigure_9_0=ruleConnectableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeRule());
	        }
       		set(
       			$current, 
       			"rootFigure",
        		lv_rootFigure_9_0, 
        		"ConnectableElement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
    }
(((
(
		lv_reference_1_0=	'reference' 
    {
        newLeafNode(lv_reference_1_0, grammarAccess.getLinkAccess().getReferenceReferenceKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed($current, "reference", true, "reference");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getModelReferenceEReferenceCrossReference_1_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_complex_3_0=	'object' 
    {
        newLeafNode(lv_complex_3_0, grammarAccess.getLinkAccess().getComplexObjectKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed($current, "complex", true, "object");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getModelClassEClassCrossReference_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='source' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getSourceKeyword_1_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getSourceReferenceEReferenceCrossReference_1_1_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='target' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinkAccess().getTargetKeyword_1_1_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getTargetReferenceEReferenceCrossReference_1_1_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))((
(
		lv_toolName_9_0=RULE_STRING
		{
			newLeafNode(lv_toolName_9_0, grammarAccess.getLinkAccess().getToolNameSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"toolName",
        		lv_toolName_9_0, 
        		"STRING");
	    }

)
)(	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLinkAccess().getColonKeyword_2_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getLinkAccess().getGroupGroupCrossReference_2_1_1_0()); 
	}

)
))?)?(	otherlv_12='icon' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLinkAccess().getIconKeyword_3_0());
    }
(
(
		lv_imageId_13_0=RULE_ID
		{
			newLeafNode(lv_imageId_13_0, grammarAccess.getLinkAccess().getImageIdIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"imageId",
        		lv_imageId_13_0, 
        		"ID");
	    }

)
))?	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_15='connection' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLinkAccess().getConnectionKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getTypeConnectionTypeEnumRuleCall_6_0()); 
	    }
		lv_type_16_0=ruleConnectionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_16_0, 
        		"ConnectionType");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_styled_17_0=	'+' 
    {
        newLeafNode(lv_styled_17_0, grammarAccess.getLinkAccess().getStyledPlusSignKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getLinkAccess().getStyleStyleCrossReference_7_1_0()); 
	}

)
))?	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getFeaturesLinkFeatureParserRuleCall_9_0()); 
	    }
		lv_features_20_0=ruleLinkFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_20_0, 
        		"LinkFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_10());
    }
	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleLinkFeature
entryRuleLinkFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkFeatureRule()); }
	 iv_ruleLinkFeature=ruleLinkFeature 
	 { $current=$iv_ruleLinkFeature.current; } 
	 EOF 
;

// Rule LinkFeature
ruleLinkFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getForegroundParserRuleCall_0()); 
    }
    this_Foreground_0=ruleForeground
    { 
        $current = $this_Foreground_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getLineStyleParserRuleCall_1()); 
    }
    this_LineStyle_1=ruleLineStyle
    { 
        $current = $this_LineStyle_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getLineWidthParserRuleCall_2()); 
    }
    this_LineWidth_2=ruleLineWidth
    { 
        $current = $this_LineWidth_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkFeatureAccess().getDecoratorParserRuleCall_3()); 
    }
    this_Decorator_3=ruleDecorator
    { 
        $current = $this_Decorator_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDecorator
entryRuleDecorator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecoratorRule()); }
	 iv_ruleDecorator=ruleDecorator 
	 { $current=$iv_ruleDecorator.current; } 
	 EOF 
;

// Rule Decorator
ruleDecorator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='decorator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDecoratorAccess().getDecoratorKeyword_0());
    }
(
(
		lv_position_1_0=RULE_INT
		{
			newLeafNode(lv_position_1_0, grammarAccess.getDecoratorAccess().getPositionINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDecoratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"position",
        		lv_position_1_0, 
        		"INT");
	    }

)
)	otherlv_2='%' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecoratorAccess().getPercentSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecoratorAccess().getConditionalFeatureConditionalParserRuleCall_3_0()); 
	    }
		lv_conditional_3_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecoratorRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_3_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDecoratorAccess().getElementDecoratorElementParserRuleCall_4_0()); 
	    }
		lv_element_4_0=ruleDecoratorElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecoratorRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"DecoratorElement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnchor
entryRuleAnchor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnchorRule()); }
	 iv_ruleAnchor=ruleAnchor 
	 { $current=$iv_ruleAnchor.current; } 
	 EOF 
;

// Rule Anchor
ruleAnchor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='anchor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnchorAccess().getAnchorKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnchorAccess().getDirectionAnchorDirectionEnumRuleCall_1_0()); 
	    }
		lv_direction_1_0=ruleAnchorDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnchorRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_1_0, 
        		"AnchorDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnchorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnchorAccess().getModelReferenceEReferenceCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnchorAccess().getConditionalFeatureConditionalParserRuleCall_3_0()); 
	    }
		lv_conditional_3_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnchorRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_3_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleCustomColor
entryRuleCustomColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomColorRule()); }
	 iv_ruleCustomColor=ruleCustomColor 
	 { $current=$iv_ruleCustomColor.current; } 
	 EOF 
;

// Rule CustomColor
ruleCustomColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='color' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomColorAccess().getColorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomColorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_R_2_0=RULE_INT
		{
			newLeafNode(lv_R_2_0, grammarAccess.getCustomColorAccess().getRINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"R",
        		lv_R_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCustomColorAccess().getCommaKeyword_3());
    }
(
(
		lv_G_4_0=RULE_INT
		{
			newLeafNode(lv_G_4_0, grammarAccess.getCustomColorAccess().getGINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"G",
        		lv_G_4_0, 
        		"INT");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCustomColorAccess().getCommaKeyword_5());
    }
(
(
		lv_B_6_0=RULE_INT
		{
			newLeafNode(lv_B_6_0, grammarAccess.getCustomColorAccess().getBINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"B",
        		lv_B_6_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	 iv_ruleColor=ruleColor 
	 { $current=$iv_ruleColor.current; } 
	 EOF 
;

// Rule Color
ruleColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getColorAccess().getDefaultDefaultColorEnumRuleCall_0_0()); 
	    }
		lv_default_0_0=ruleDefaultColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_0_0, 
        		"DefaultColor");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getColorAccess().getCustomCustomColorCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleConnectableElement
entryRuleConnectableElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectableElementRule()); }
	 iv_ruleConnectableElement=ruleConnectableElement 
	 { $current=$iv_ruleConnectableElement.current; } 
	 EOF 
;

// Rule ConnectableElement
ruleConnectableElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getRectangleParserRuleCall_0()); 
    }
    this_Rectangle_0=ruleRectangle
    { 
        $current = $this_Rectangle_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getRhombusParserRuleCall_1()); 
    }
    this_Rhombus_1=ruleRhombus
    { 
        $current = $this_Rhombus_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getEllipseParserRuleCall_2()); 
    }
    this_Ellipse_2=ruleEllipse
    { 
        $current = $this_Ellipse_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getPolylineParserRuleCall_3()); 
    }
    this_Polyline_3=rulePolyline
    { 
        $current = $this_Polyline_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getLabelParserRuleCall_4()); 
    }
    this_Label_4=ruleLabel
    { 
        $current = $this_Label_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getImageParserRuleCall_5()); 
    }
    this_Image_5=ruleImage
    { 
        $current = $this_Image_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getInvisibleParserRuleCall_6()); 
    }
    this_Invisible_6=ruleInvisible
    { 
        $current = $this_Invisible_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getCustomParserRuleCall_7()); 
    }
    this_Custom_7=ruleCustom
    { 
        $current = $this_Custom_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementAccess().getTriangleParserRuleCall_8()); 
    }
    this_Triangle_8=ruleTriangle
    { 
        $current = $this_Triangle_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDecoratorElement
entryRuleDecoratorElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecoratorElementRule()); }
	 iv_ruleDecoratorElement=ruleDecoratorElement 
	 { $current=$iv_ruleDecoratorElement.current; } 
	 EOF 
;

// Rule DecoratorElement
ruleDecoratorElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getEllipseParserRuleCall_0()); 
    }
    this_Ellipse_0=ruleEllipse
    { 
        $current = $this_Ellipse_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getRhombusParserRuleCall_1()); 
    }
    this_Rhombus_1=ruleRhombus
    { 
        $current = $this_Rhombus_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getPolylineParserRuleCall_2()); 
    }
    this_Polyline_2=rulePolyline
    { 
        $current = $this_Polyline_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getTriangleParserRuleCall_3()); 
    }
    this_Triangle_3=ruleTriangle
    { 
        $current = $this_Triangle_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getLabelParserRuleCall_4()); 
    }
    this_Label_4=ruleLabel
    { 
        $current = $this_Label_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getImageParserRuleCall_5()); 
    }
    this_Image_5=ruleImage
    { 
        $current = $this_Image_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getArrowParserRuleCall_6()); 
    }
    this_Arrow_6=ruleArrow
    { 
        $current = $this_Arrow_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecoratorElementAccess().getLineParserRuleCall_7()); 
    }
    this_Line_7=ruleLine
    { 
        $current = $this_Line_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConnectableElementFeature
entryRuleConnectableElementFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectableElementFeatureRule()); }
	 iv_ruleConnectableElementFeature=ruleConnectableElementFeature 
	 { $current=$iv_ruleConnectableElementFeature.current; } 
	 EOF 
;

// Rule ConnectableElementFeature
ruleConnectableElementFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getPositionParserRuleCall_0()); 
    }
    this_Position_0=rulePosition
    { 
        $current = $this_Position_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getSizeParserRuleCall_1()); 
    }
    this_Size_1=ruleSize
    { 
        $current = $this_Size_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getColorFeatureParserRuleCall_2()); 
    }
    this_ColorFeature_2=ruleColorFeature
    { 
        $current = $this_ColorFeature_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getLineStyleParserRuleCall_3()); 
    }
    this_LineStyle_3=ruleLineStyle
    { 
        $current = $this_LineStyle_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getLineWidthParserRuleCall_4()); 
    }
    this_LineWidth_4=ruleLineWidth
    { 
        $current = $this_LineWidth_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getContainsParserRuleCall_5()); 
    }
    this_Contains_5=ruleContains
    { 
        $current = $this_Contains_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getAnchorParserRuleCall_6()); 
    }
    this_Anchor_6=ruleAnchor
    { 
        $current = $this_Anchor_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getLayoutParserRuleCall_7()); 
    }
    this_Layout_7=ruleLayout
    { 
        $current = $this_Layout_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectableElementFeatureAccess().getVisibleParserRuleCall_8()); 
    }
    this_Visible_8=ruleVisible
    { 
        $current = $this_Visible_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	 iv_ruleLayout=ruleLayout 
	 { $current=$iv_ruleLayout.current; } 
	 EOF 
;

// Rule Layout
ruleLayout returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='layout' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLayoutAccess().getLayoutKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayoutAccess().getLayoutContainerLayoutEnumRuleCall_1_0()); 
	    }
		lv_layout_1_0=ruleContainerLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayoutRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_1_0, 
        		"ContainerLayout");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLayoutAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayoutRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleVisible
entryRuleVisible returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibleRule()); }
	 iv_ruleVisible=ruleVisible 
	 { $current=$iv_ruleVisible.current; } 
	 EOF 
;

// Rule Visible
ruleVisible returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='invisible' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisibleAccess().getInvisibleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisibleAccess().getConditionalFeatureConditionalParserRuleCall_1_0()); 
	    }
		lv_conditional_1_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisibleRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_1_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCustomFigure
entryRuleCustomFigure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomFigureRule()); }
	 iv_ruleCustomFigure=ruleCustomFigure 
	 { $current=$iv_ruleCustomFigure.current; } 
	 EOF 
;

// Rule CustomFigure
ruleCustomFigure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='figure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomFigureAccess().getFigureKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomFigureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomFigureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomFigureAccess().getAsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFigureAccess().getElementConnectableElementParserRuleCall_3_0()); 
	    }
		lv_element_3_0=ruleConnectableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFigureRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_3_0, 
        		"ConnectableElement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCustom
entryRuleCustom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomRule()); }
	 iv_ruleCustom=ruleCustom 
	 { $current=$iv_ruleCustom.current; } 
	 EOF 
;

// Rule Custom
ruleCustom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='figure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomAccess().getFigureKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getCustomAccess().getFigureCustomFigureCrossReference_1_0()); 
	}

)
)((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getCustomAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getCustomAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCustomAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAccess().getFeaturesLinkedFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleLinkedFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"LinkedFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCustomAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRectangle
entryRuleRectangle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRectangleRule()); }
	 iv_ruleRectangle=ruleRectangle 
	 { $current=$iv_ruleRectangle.current; } 
	 EOF 
;

// Rule Rectangle
ruleRectangle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_rectangle_0_0=	'rectangle' 
    {
        newLeafNode(lv_rectangle_0_0, grammarAccess.getRectangleAccess().getRectangleRectangleKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
       		setWithLastConsumed($current, "rectangle", true, "rectangle");
	    }

)
)
    |(
(
		lv_square_1_0=	'square' 
    {
        newLeafNode(lv_square_1_0, grammarAccess.getRectangleAccess().getSquareSquareKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
       		setWithLastConsumed($current, "square", true, "square");
	    }

)
))((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getRectangleAccess().getStyledPlusSignKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRectangleRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRectangleAccess().getStyleStyleCrossReference_1_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRectangleAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getFeaturesRectangleFeatureParserRuleCall_3_0()); 
	    }
		lv_features_5_0=ruleRectangleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"RectangleFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getChildrenChildElementParserRuleCall_4_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRectangleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRectangleFeature
entryRuleRectangleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRectangleFeatureRule()); }
	 iv_ruleRectangleFeature=ruleRectangleFeature 
	 { $current=$iv_ruleRectangleFeature.current; } 
	 EOF 
;

// Rule RectangleFeature
ruleRectangleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRectangleFeatureAccess().getConnectableElementFeatureParserRuleCall_0()); 
    }
    this_ConnectableElementFeature_0=ruleConnectableElementFeature
    { 
        $current = $this_ConnectableElementFeature_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRectangleFeatureAccess().getCornerParserRuleCall_1()); 
    }
    this_Corner_1=ruleCorner
    { 
        $current = $this_Corner_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRhombus
entryRuleRhombus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRhombusRule()); }
	 iv_ruleRhombus=ruleRhombus 
	 { $current=$iv_ruleRhombus.current; } 
	 EOF 
;

// Rule Rhombus
ruleRhombus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRhombusAccess().getRhombusAction_0(),
            $current);
    }
)	otherlv_1='rhombus' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRhombusAccess().getRhombusKeyword_1());
    }
((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getRhombusAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRhombusRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRhombusRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRhombusAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRhombusAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRhombusAccess().getFeaturesConnectableElementFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleConnectableElementFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRhombusRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"ConnectableElementFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRhombusAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRhombusRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRhombusAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEllipse
entryRuleEllipse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEllipseRule()); }
	 iv_ruleEllipse=ruleEllipse 
	 { $current=$iv_ruleEllipse.current; } 
	 EOF 
;

// Rule Ellipse
ruleEllipse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_ellipse_0_0=	'ellipse' 
    {
        newLeafNode(lv_ellipse_0_0, grammarAccess.getEllipseAccess().getEllipseEllipseKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
       		setWithLastConsumed($current, "ellipse", true, "ellipse");
	    }

)
)
    |(
(
		lv_circle_1_0=	'circle' 
    {
        newLeafNode(lv_circle_1_0, grammarAccess.getEllipseAccess().getCircleCircleKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
       		setWithLastConsumed($current, "circle", true, "circle");
	    }

)
))((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getEllipseAccess().getStyledPlusSignKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEllipseRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getEllipseAccess().getStyleStyleCrossReference_1_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEllipseAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getFeaturesConnectableElementFeatureParserRuleCall_3_0()); 
	    }
		lv_features_5_0=ruleConnectableElementFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"ConnectableElementFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getChildrenChildElementParserRuleCall_4_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEllipseAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePolyline
entryRulePolyline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolylineRule()); }
	 iv_rulePolyline=rulePolyline 
	 { $current=$iv_rulePolyline.current; } 
	 EOF 
;

// Rule Polyline
rulePolyline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_polygon_0_0=	'polygon' 
    {
        newLeafNode(lv_polygon_0_0, grammarAccess.getPolylineAccess().getPolygonPolygonKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolylineRule());
	        }
       		setWithLastConsumed($current, "polygon", true, "polygon");
	    }

)
)
    |(
(
		lv_polyline_1_0=	'polyline' 
    {
        newLeafNode(lv_polyline_1_0, grammarAccess.getPolylineAccess().getPolylinePolylineKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolylineRule());
	        }
       		setWithLastConsumed($current, "polyline", true, "polyline");
	    }

)
))((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getPolylineAccess().getStyledPlusSignKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolylineRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolylineRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPolylineAccess().getStyleStyleCrossReference_1_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPolylineAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getFeaturesPointParserRuleCall_3_0()); 
	    }
		lv_features_5_0=rulePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"Point");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getFeaturesPointParserRuleCall_4_0()); 
	    }
		lv_features_6_0=rulePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_6_0, 
        		"Point");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getFeaturesPointParserRuleCall_5_0()); 
	    }
		lv_features_7_0=rulePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_7_0, 
        		"Point");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getFeaturesConnectableElementFeatureParserRuleCall_6_0()); 
	    }
		lv_features_8_0=ruleConnectableElementFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_8_0, 
        		"ConnectableElementFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getChildrenChildElementParserRuleCall_7_0()); 
	    }
		lv_children_9_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPolylineAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleTriangle
entryRuleTriangle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriangleRule()); }
	 iv_ruleTriangle=ruleTriangle 
	 { $current=$iv_ruleTriangle.current; } 
	 EOF 
;

// Rule Triangle
ruleTriangle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTriangleAccess().getTriangleAction_0(),
            $current);
    }
)	otherlv_1='triangle' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTriangleAccess().getTriangleKeyword_1());
    }
((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getTriangleAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriangleRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriangleRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTriangleAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTriangleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriangleAccess().getFeaturesConnectableElementFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleConnectableElementFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriangleRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"ConnectableElementFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTriangleAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriangleRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTriangleAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	 iv_ruleLine=ruleLine 
	 { $current=$iv_ruleLine.current; } 
	 EOF 
;

// Rule Line
ruleLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLineAccess().getLineAction_0(),
            $current);
    }
)((
(
		lv_horizontal_1_0=	'hline' 
    {
        newLeafNode(lv_horizontal_1_0, grammarAccess.getLineAccess().getHorizontalHlineKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineRule());
	        }
       		setWithLastConsumed($current, "horizontal", true, "hline");
	    }

)
)
    |(
(
		lv_vertical_2_0=	'vline' 
    {
        newLeafNode(lv_vertical_2_0, grammarAccess.getLineAccess().getVerticalVlineKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineRule());
	        }
       		setWithLastConsumed($current, "vertical", true, "vline");
	    }

)
))((
(
		lv_styled_3_0=	'+' 
    {
        newLeafNode(lv_styled_3_0, grammarAccess.getLineAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getLineAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLineAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineAccess().getFeaturesLineFeatureParserRuleCall_4_0()); 
	    }
		lv_features_6_0=ruleLineFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_6_0, 
        		"LineFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLineAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLineFeature
entryRuleLineFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineFeatureRule()); }
	 iv_ruleLineFeature=ruleLineFeature 
	 { $current=$iv_ruleLineFeature.current; } 
	 EOF 
;

// Rule LineFeature
ruleLineFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLineFeatureAccess().getLineWidthParserRuleCall_0()); 
    }
    this_LineWidth_0=ruleLineWidth
    { 
        $current = $this_LineWidth_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLineFeatureAccess().getForegroundParserRuleCall_1()); 
    }
    this_Foreground_1=ruleForeground
    { 
        $current = $this_Foreground_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLineFeatureAccess().getPositionParserRuleCall_2()); 
    }
    this_Position_2=rulePosition
    { 
        $current = $this_Position_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLineFeatureAccess().getSizeParserRuleCall_3()); 
    }
    this_Size_3=ruleSize
    { 
        $current = $this_Size_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLineFeatureAccess().getVisibleParserRuleCall_4()); 
    }
    this_Visible_4=ruleVisible
    { 
        $current = $this_Visible_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrow
entryRuleArrow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrowRule()); }
	 iv_ruleArrow=ruleArrow 
	 { $current=$iv_ruleArrow.current; } 
	 EOF 
;

// Rule Arrow
ruleArrow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrowAccess().getArrowAction_0(),
            $current);
    }
)	otherlv_1='arrow' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrowAccess().getArrowKeyword_1());
    }
((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getArrowAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrowRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrowRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getArrowAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrowAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrowAccess().getFeaturesLineFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleLineFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrowRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"LineFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArrowAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleContains
entryRuleContains returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainsRule()); }
	 iv_ruleContains=ruleContains 
	 { $current=$iv_ruleContains.current; } 
	 EOF 
;

// Rule Contains
ruleContains returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='container' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContainsAccess().getContainerKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContainsAccess().getModelReferenceEReferenceCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContainsAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainsRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueAccess().getIntValueParserRuleCall_0()); 
    }
    this_IntValue_0=ruleIntValue
    { 
        $current = $this_IntValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getDoubleValueParserRuleCall_1()); 
    }
    this_DoubleValue_1=ruleDoubleValue
    { 
        $current = $this_DoubleValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getStringValueParserRuleCall_2()); 
    }
    this_StringValue_2=ruleStringValue
    { 
        $current = $this_StringValue_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_3()); 
    }
    this_BooleanValue_3=ruleBooleanValue
    { 
        $current = $this_BooleanValue_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getEnumValueParserRuleCall_4()); 
    }
    this_EnumValue_4=ruleEnumValue
    { 
        $current = $this_EnumValue_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntValue
entryRuleIntValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	 iv_ruleIntValue=ruleIntValue 
	 { $current=$iv_ruleIntValue.current; } 
	 EOF 
;

// Rule IntValue
ruleIntValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;





// Entry rule entryRuleDoubleValue
entryRuleDoubleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleValueRule()); }
	 iv_ruleDoubleValue=ruleDoubleValue 
	 { $current=$iv_ruleDoubleValue.current; } 
	 EOF 
;

// Rule DoubleValue
ruleDoubleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_valueInt_0_0=RULE_INT
		{
			newLeafNode(lv_valueInt_0_0, grammarAccess.getDoubleValueAccess().getValueIntINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueInt",
        		lv_valueInt_0_0, 
        		"INT");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoubleValueAccess().getFullStopKeyword_1());
    }
(
(
		lv_valueDecimal_2_0=RULE_INT
		{
			newLeafNode(lv_valueDecimal_2_0, grammarAccess.getDoubleValueAccess().getValueDecimalINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueDecimal",
        		lv_valueDecimal_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	 iv_ruleStringValue=ruleStringValue 
	 { $current=$iv_ruleStringValue.current; } 
	 EOF 
;

// Rule StringValue
ruleStringValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_null_0_0=	'null' 
    {
        newLeafNode(lv_null_0_0, grammarAccess.getStringValueAccess().getNullNullKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringValueRule());
	        }
       		setWithLastConsumed($current, "null", true, "null");
	    }

)
)
    |(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	 iv_ruleBooleanValue=ruleBooleanValue 
	 { $current=$iv_ruleBooleanValue.current; } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanValueAccess().getValueBooleanLiteralEnumRuleCall_0()); 
	    }
		lv_value_0_0=ruleBooleanLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"BooleanLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	 iv_ruleEnumValue=ruleEnumValue 
	 { $current=$iv_ruleEnumValue.current; } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;







// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	 iv_ruleLabel=ruleLabel 
	 { $current=$iv_ruleLabel.current; } 
	 EOF 
;

// Rule Label
ruleLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabelAccess().getLabelAction_0(),
            $current);
    }
)	otherlv_1='label' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getLabelKeyword_1());
    }
((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getLabelAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getLabelAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLabelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelAccess().getFeaturesLabelFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleLabelFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"LabelFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLabelAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleLabelFeature
entryRuleLabelFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelFeatureRule()); }
	 iv_ruleLabelFeature=ruleLabelFeature 
	 { $current=$iv_ruleLabelFeature.current; } 
	 EOF 
;

// Rule LabelFeature
ruleLabelFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getTextValueParserRuleCall_0()); 
    }
    this_TextValue_0=ruleTextValue
    { 
        $current = $this_TextValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getForegroundParserRuleCall_1()); 
    }
    this_Foreground_1=ruleForeground
    { 
        $current = $this_Foreground_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontFaceParserRuleCall_2()); 
    }
    this_FontFace_2=ruleFontFace
    { 
        $current = $this_FontFace_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontSizeParserRuleCall_3()); 
    }
    this_FontSize_3=ruleFontSize
    { 
        $current = $this_FontSize_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getFontStyleParserRuleCall_4()); 
    }
    this_FontStyle_4=ruleFontStyle
    { 
        $current = $this_FontStyle_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getSizeParserRuleCall_5()); 
    }
    this_Size_5=ruleSize
    { 
        $current = $this_Size_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getPositionParserRuleCall_6()); 
    }
    this_Position_6=rulePosition
    { 
        $current = $this_Position_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabelFeatureAccess().getVisibleParserRuleCall_7()); 
    }
    this_Visible_7=ruleVisible
    { 
        $current = $this_Visible_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	 iv_ruleImage=ruleImage 
	 { $current=$iv_ruleImage.current; } 
	 EOF 
;

// Rule Image
ruleImage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='image' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
    }
(
(
		lv_imageId_1_0=RULE_ID
		{
			newLeafNode(lv_imageId_1_0, grammarAccess.getImageAccess().getImageIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"imageId",
        		lv_imageId_1_0, 
        		"ID");
	    }

)
)((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getImageAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getImageAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImageAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getFeaturesImageFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleImageFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"ImageFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getImageAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleImageFeature
entryRuleImageFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageFeatureRule()); }
	 iv_ruleImageFeature=ruleImageFeature 
	 { $current=$iv_ruleImageFeature.current; } 
	 EOF 
;

// Rule ImageFeature
ruleImageFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getSizeParserRuleCall_0()); 
    }
    this_Size_0=ruleSize
    { 
        $current = $this_Size_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getPositionParserRuleCall_1()); 
    }
    this_Position_1=rulePosition
    { 
        $current = $this_Position_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImageFeatureAccess().getTransparencyParserRuleCall_2()); 
    }
    this_Transparency_2=ruleTransparency
    { 
        $current = $this_Transparency_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInvisible
entryRuleInvisible returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvisibleRule()); }
	 iv_ruleInvisible=ruleInvisible 
	 { $current=$iv_ruleInvisible.current; } 
	 EOF 
;

// Rule Invisible
ruleInvisible returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInvisibleAccess().getInvisibleAction_0(),
            $current);
    }
)	otherlv_1='invisible' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvisibleAccess().getInvisibleKeyword_1());
    }
((
(
		lv_styled_2_0=	'+' 
    {
        newLeafNode(lv_styled_2_0, grammarAccess.getInvisibleAccess().getStyledPlusSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvisibleRule());
	        }
       		setWithLastConsumed($current, "styled", true, "+");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvisibleRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInvisibleAccess().getStyleStyleCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInvisibleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvisibleAccess().getFeaturesInvisibleFeatureParserRuleCall_4_0()); 
	    }
		lv_features_5_0=ruleInvisibleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvisibleRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"InvisibleFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInvisibleAccess().getChildrenChildElementParserRuleCall_5_0()); 
	    }
		lv_children_6_0=ruleChildElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvisibleRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"ChildElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInvisibleAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleInvisibleFeature
entryRuleInvisibleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvisibleFeatureRule()); }
	 iv_ruleInvisibleFeature=ruleInvisibleFeature 
	 { $current=$iv_ruleInvisibleFeature.current; } 
	 EOF 
;

// Rule InvisibleFeature
ruleInvisibleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInvisibleFeatureAccess().getSizeParserRuleCall_0()); 
    }
    this_Size_0=ruleSize
    { 
        $current = $this_Size_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInvisibleFeatureAccess().getPositionParserRuleCall_1()); 
    }
    this_Position_1=rulePosition
    { 
        $current = $this_Position_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInvisibleFeatureAccess().getLinkedFeatureParserRuleCall_2()); 
    }
    this_LinkedFeature_2=ruleLinkedFeature
    { 
        $current = $this_LinkedFeature_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInvisibleFeatureAccess().getLayoutParserRuleCall_3()); 
    }
    this_Layout_3=ruleLayout
    { 
        $current = $this_Layout_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColorFeature
entryRuleColorFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorFeatureRule()); }
	 iv_ruleColorFeature=ruleColorFeature 
	 { $current=$iv_ruleColorFeature.current; } 
	 EOF 
;

// Rule ColorFeature
ruleColorFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getColorFeatureAccess().getForegroundParserRuleCall_0()); 
    }
    this_Foreground_0=ruleForeground
    { 
        $current = $this_Foreground_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getColorFeatureAccess().getBackgroundParserRuleCall_1()); 
    }
    this_Background_1=ruleBackground
    { 
        $current = $this_Background_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleForeground
entryRuleForeground returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForegroundRule()); }
	 iv_ruleForeground=ruleForeground 
	 { $current=$iv_ruleForeground.current; } 
	 EOF 
;

// Rule Foreground
ruleForeground returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'foreground' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getForegroundAccess().getTypeForegroundKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForegroundRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "foreground");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForegroundAccess().getColorColorParserRuleCall_1_0()); 
	    }
		lv_color_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForegroundRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForegroundAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForegroundRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBackground
entryRuleBackground returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundRule()); }
	 iv_ruleBackground=ruleBackground 
	 { $current=$iv_ruleBackground.current; } 
	 EOF 
;

// Rule Background
ruleBackground returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'background' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getBackgroundAccess().getTypeBackgroundKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBackgroundRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "background");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundAccess().getColorColorParserRuleCall_1_0()); 
	    }
		lv_color_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTransparency
entryRuleTransparency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransparencyRule()); }
	 iv_ruleTransparency=ruleTransparency 
	 { $current=$iv_ruleTransparency.current; } 
	 EOF 
;

// Rule Transparency
ruleTransparency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transparency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransparencyAccess().getTransparencyKeyword_0());
    }
(
(
		lv_percent_1_0=RULE_INT
		{
			newLeafNode(lv_percent_1_0, grammarAccess.getTransparencyAccess().getPercentINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransparencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"percent",
        		lv_percent_1_0, 
        		"INT");
	    }

)
)	otherlv_2='%' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransparencyAccess().getPercentSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransparencyAccess().getConditionalFeatureConditionalParserRuleCall_3_0()); 
	    }
		lv_conditional_3_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransparencyRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_3_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSize
entryRuleSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	 iv_ruleSize=ruleSize 
	 { $current=$iv_ruleSize.current; } 
	 EOF 
;

// Rule Size
ruleSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSizeAccess().getSizeKeyword_0());
    }
(
(
		lv_width_1_0=RULE_INT
		{
			newLeafNode(lv_width_1_0, grammarAccess.getSizeAccess().getWidthINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_1_0, 
        		"INT");
	    }

)
)(
(
		lv_widthRelative_2_0=	'%' 
    {
        newLeafNode(lv_widthRelative_2_0, grammarAccess.getSizeAccess().getWidthRelativePercentSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed($current, "widthRelative", true, "\%");
	    }

)
)?(	otherlv_3='x' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSizeAccess().getXKeyword_3_0());
    }
(
(
		lv_height_4_0=RULE_INT
		{
			newLeafNode(lv_height_4_0, grammarAccess.getSizeAccess().getHeightINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_4_0, 
        		"INT");
	    }

)
)(
(
		lv_heightRelative_5_0=	'%' 
    {
        newLeafNode(lv_heightRelative_5_0, grammarAccess.getSizeAccess().getHeightRelativePercentSignKeyword_3_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed($current, "heightRelative", true, "\%");
	    }

)
)?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeAccess().getConditionalFeatureConditionalParserRuleCall_4_0()); 
	    }
		lv_conditional_6_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_6_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	 iv_rulePoint=rulePoint 
	 { $current=$iv_rulePoint.current; } 
	 EOF 
;

// Rule Point
rulePoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='point' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPointAccess().getPointKeyword_0());
    }
(
(
		lv_x_1_0=RULE_INT
		{
			newLeafNode(lv_x_1_0, grammarAccess.getPointAccess().getXINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_1_0, 
        		"INT");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPointAccess().getCommaKeyword_2());
    }
(
(
		lv_y_3_0=RULE_INT
		{
			newLeafNode(lv_y_3_0, grammarAccess.getPointAccess().getYINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_3_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPointAccess().getConditionalFeatureConditionalParserRuleCall_4_0()); 
	    }
		lv_conditional_4_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_4_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	 iv_rulePosition=rulePosition 
	 { $current=$iv_rulePosition.current; } 
	 EOF 
;

// Rule Position
rulePosition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='position' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPositionAccess().getPositionKeyword_0());
    }
(
(
		lv_x_1_0=RULE_INT
		{
			newLeafNode(lv_x_1_0, grammarAccess.getPositionAccess().getXINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_1_0, 
        		"INT");
	    }

)
)(
(
		lv_xRelative_2_0=	'%' 
    {
        newLeafNode(lv_xRelative_2_0, grammarAccess.getPositionAccess().getXRelativePercentSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed($current, "xRelative", true, "\%");
	    }

)
)?	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPositionAccess().getCommaKeyword_3());
    }
(
(
		lv_y_4_0=RULE_INT
		{
			newLeafNode(lv_y_4_0, grammarAccess.getPositionAccess().getYINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_4_0, 
        		"INT");
	    }

)
)(
(
		lv_yRelative_5_0=	'%' 
    {
        newLeafNode(lv_yRelative_5_0, grammarAccess.getPositionAccess().getYRelativePercentSignKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed($current, "yRelative", true, "\%");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPositionAccess().getConditionalFeatureConditionalParserRuleCall_6_0()); 
	    }
		lv_conditional_6_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositionRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_6_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleCorner
entryRuleCorner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCornerRule()); }
	 iv_ruleCorner=ruleCorner 
	 { $current=$iv_ruleCorner.current; } 
	 EOF 
;

// Rule Corner
ruleCorner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='corner' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCornerAccess().getCornerKeyword_0());
    }
(
(
		lv_angle_1_0=RULE_INT
		{
			newLeafNode(lv_angle_1_0, grammarAccess.getCornerAccess().getAngleINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCornerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"angle",
        		lv_angle_1_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCornerAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCornerRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTextValue
entryRuleTextValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextValueRule()); }
	 iv_ruleTextValue=ruleTextValue 
	 { $current=$iv_ruleTextValue.current; } 
	 EOF 
;

// Rule TextValue
ruleTextValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTextValueAccess().getTextValueAction_0(),
            $current);
    }
)	otherlv_1='text' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTextValueAccess().getTextKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextValueAccess().getPartsTextPartParserRuleCall_2_0()); 
	    }
		lv_parts_2_0=ruleTextPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextValueRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_2_0, 
        		"TextPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTextValueAccess().getConditionalFeatureConditionalParserRuleCall_3_0()); 
	    }
		lv_conditional_3_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextValueRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_3_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTextPart
entryRuleTextPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextPartRule()); }
	 iv_ruleTextPart=ruleTextPart 
	 { $current=$iv_ruleTextPart.current; } 
	 EOF 
;

// Rule TextPart
ruleTextPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_text_0_0=RULE_STRING
		{
			newLeafNode(lv_text_0_0, grammarAccess.getTextPartAccess().getTextSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextPartRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTextPartAccess().getModelAttributeEAttributeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFontFace
entryRuleFontFace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontFaceRule()); }
	 iv_ruleFontFace=ruleFontFace 
	 { $current=$iv_ruleFontFace.current; } 
	 EOF 
;

// Rule FontFace
ruleFontFace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-face' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontFaceAccess().getFontFaceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontFaceAccess().getFaceFontFaceTypeEnumRuleCall_1_0()); 
	    }
		lv_face_1_0=ruleFontFaceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontFaceRule());
	        }
       		set(
       			$current, 
       			"face",
        		lv_face_1_0, 
        		"FontFaceType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFontFaceAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontFaceRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFontSize
entryRuleFontSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontSizeRule()); }
	 iv_ruleFontSize=ruleFontSize 
	 { $current=$iv_ruleFontSize.current; } 
	 EOF 
;

// Rule FontSize
ruleFontSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontSizeAccess().getFontSizeKeyword_0());
    }
(
(
		lv_size_1_0=RULE_INT
		{
			newLeafNode(lv_size_1_0, grammarAccess.getFontSizeAccess().getSizeINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_1_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFontSizeAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontSizeRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFontStyle
entryRuleFontStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontStyleRule()); }
	 iv_ruleFontStyle=ruleFontStyle 
	 { $current=$iv_ruleFontStyle.current; } 
	 EOF 
;

// Rule FontStyle
ruleFontStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='font-style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontStyleAccess().getFontStyleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontStyleAccess().getStylesFontStyleTypeEnumRuleCall_1_0()); 
	    }
		lv_styles_1_0=ruleFontStyleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontStyleRule());
	        }
       		add(
       			$current, 
       			"styles",
        		lv_styles_1_0, 
        		"FontStyleType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFontStyleAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontStyleAccess().getStylesFontStyleTypeEnumRuleCall_2_1_0()); 
	    }
		lv_styles_3_0=ruleFontStyleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontStyleRule());
	        }
       		add(
       			$current, 
       			"styles",
        		lv_styles_3_0, 
        		"FontStyleType");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getFontStyleAccess().getConditionalFeatureConditionalParserRuleCall_3_0()); 
	    }
		lv_conditional_4_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontStyleRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_4_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleLineStyle
entryRuleLineStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineStyleRule()); }
	 iv_ruleLineStyle=ruleLineStyle 
	 { $current=$iv_ruleLineStyle.current; } 
	 EOF 
;

// Rule LineStyle
ruleLineStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line-type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineStyleAccess().getLineTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineStyleAccess().getStyleLineTypeEnumRuleCall_1_0()); 
	    }
		lv_style_1_0=ruleLineType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineStyleRule());
	        }
       		set(
       			$current, 
       			"style",
        		lv_style_1_0, 
        		"LineType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLineStyleAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineStyleRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleLineWidth
entryRuleLineWidth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineWidthRule()); }
	 iv_ruleLineWidth=ruleLineWidth 
	 { $current=$iv_ruleLineWidth.current; } 
	 EOF 
;

// Rule LineWidth
ruleLineWidth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line-width' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineWidthAccess().getLineWidthKeyword_0());
    }
(
(
		lv_width_1_0=RULE_INT
		{
			newLeafNode(lv_width_1_0, grammarAccess.getLineWidthAccess().getWidthINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLineWidthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_1_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLineWidthAccess().getConditionalFeatureConditionalParserRuleCall_2_0()); 
	    }
		lv_conditional_2_0=ruleFeatureConditional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineWidthRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_2_0, 
        		"FeatureConditional");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Rule ConnectionType
ruleConnectionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='free' 
	{
        $current = grammarAccess.getConnectionTypeAccess().getFREEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConnectionTypeAccess().getFREEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='manhattan' 
	{
        $current = grammarAccess.getConnectionTypeAccess().getMANHATTANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConnectionTypeAccess().getMANHATTANEnumLiteralDeclaration_1()); 
    }
));



// Rule AnchorDirection
ruleAnchorDirection returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='incoming' 
	{
        $current = grammarAccess.getAnchorDirectionAccess().getINCOMINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAnchorDirectionAccess().getINCOMINGEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='outgoing' 
	{
        $current = grammarAccess.getAnchorDirectionAccess().getOUTGOINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAnchorDirectionAccess().getOUTGOINGEnumLiteralDeclaration_1()); 
    }
));



// Rule DefaultColor
ruleDefaultColor returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='white' 
	{
        $current = grammarAccess.getDefaultColorAccess().getWHITEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDefaultColorAccess().getWHITEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='silver' 
	{
        $current = grammarAccess.getDefaultColorAccess().getSILVEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDefaultColorAccess().getSILVEREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='gray' 
	{
        $current = grammarAccess.getDefaultColorAccess().getGRAYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDefaultColorAccess().getGRAYEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='black' 
	{
        $current = grammarAccess.getDefaultColorAccess().getBLACKEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDefaultColorAccess().getBLACKEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='red' 
	{
        $current = grammarAccess.getDefaultColorAccess().getREDEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDefaultColorAccess().getREDEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='maroon' 
	{
        $current = grammarAccess.getDefaultColorAccess().getMAROONEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDefaultColorAccess().getMAROONEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='yellow' 
	{
        $current = grammarAccess.getDefaultColorAccess().getYELLOWEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDefaultColorAccess().getYELLOWEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='olive' 
	{
        $current = grammarAccess.getDefaultColorAccess().getOLIVEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getDefaultColorAccess().getOLIVEEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='lime' 
	{
        $current = grammarAccess.getDefaultColorAccess().getLIMEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getDefaultColorAccess().getLIMEEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='green' 
	{
        $current = grammarAccess.getDefaultColorAccess().getGREENEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getDefaultColorAccess().getGREENEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='aqua' 
	{
        $current = grammarAccess.getDefaultColorAccess().getAQUAEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getDefaultColorAccess().getAQUAEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='teal' 
	{
        $current = grammarAccess.getDefaultColorAccess().getTEALEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getDefaultColorAccess().getTEALEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='blue' 
	{
        $current = grammarAccess.getDefaultColorAccess().getBLUEEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getDefaultColorAccess().getBLUEEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='navy' 
	{
        $current = grammarAccess.getDefaultColorAccess().getNAVYEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getDefaultColorAccess().getNAVYEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='fuchsia' 
	{
        $current = grammarAccess.getDefaultColorAccess().getFUCHSIAEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getDefaultColorAccess().getFUCHSIAEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='purple' 
	{
        $current = grammarAccess.getDefaultColorAccess().getPURPLEEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getDefaultColorAccess().getPURPLEEnumLiteralDeclaration_15()); 
    }
));



// Rule ContainerLayout
ruleContainerLayout returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='free' 
	{
        $current = grammarAccess.getContainerLayoutAccess().getFREEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getContainerLayoutAccess().getFREEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='vertical' 
	{
        $current = grammarAccess.getContainerLayoutAccess().getVSTACKEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getContainerLayoutAccess().getVSTACKEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='horizontal' 
	{
        $current = grammarAccess.getContainerLayoutAccess().getHSTACKEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getContainerLayoutAccess().getHSTACKEnumLiteralDeclaration_2()); 
    }
));



// Rule Operator
ruleOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='=' 
	{
        $current = grammarAccess.getOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getEQUALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='<>' 
	{
        $current = grammarAccess.getOperatorAccess().getDIFFERENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getDIFFERENTEnumLiteralDeclaration_1()); 
    }
));



// Rule BooleanLiteral
ruleBooleanLiteral returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='true' 
	{
        $current = grammarAccess.getBooleanLiteralAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBooleanLiteralAccess().getTRUEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='false' 
	{
        $current = grammarAccess.getBooleanLiteralAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBooleanLiteralAccess().getFALSEEnumLiteralDeclaration_1()); 
    }
));



// Rule FontFaceType
ruleFontFaceType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='arial' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getARIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFontFaceTypeAccess().getARIALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='verdana' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getVERDANAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFontFaceTypeAccess().getVERDANAEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='times' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getTIMESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFontFaceTypeAccess().getTIMESEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='courier' 
	{
        $current = grammarAccess.getFontFaceTypeAccess().getCOURIEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getFontFaceTypeAccess().getCOURIEREnumLiteralDeclaration_3()); 
    }
));



// Rule FontStyleType
ruleFontStyleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='italics' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getITALICSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFontStyleTypeAccess().getITALICSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='bold' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getBOLDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFontStyleTypeAccess().getBOLDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='underline' 
	{
        $current = grammarAccess.getFontStyleTypeAccess().getUNDERLINEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFontStyleTypeAccess().getUNDERLINEEnumLiteralDeclaration_2()); 
    }
));



// Rule LineType
ruleLineType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='solid' 
	{
        $current = grammarAccess.getLineTypeAccess().getSOLIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLineTypeAccess().getSOLIDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='dashed' 
	{
        $current = grammarAccess.getLineTypeAccess().getDASHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLineTypeAccess().getDASHEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='dotted' 
	{
        $current = grammarAccess.getLineTypeAccess().getDOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLineTypeAccess().getDOTEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


